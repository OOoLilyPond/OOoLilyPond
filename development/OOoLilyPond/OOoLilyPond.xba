<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="OOoLilyPond" script:language="StarBasic">&apos;	 OOoLilyPond - using LilyPond in OpenOffice.org
&apos;	
&apos;    Copyright (C) 2005  geoffroy piroux
&apos;    Copyright (C) 2009  Samuel Hartmann
&apos;
&apos;    This program is free software; you can redistribute it and/or modify
&apos;    it under the terms of the GNU General Public License as published by
&apos;    the Free Software Foundation; either version 2 of the License, or
&apos;    (at your option) any later version.
&apos;
&apos;    This program is distributed in the hope that it will be useful,
&apos;    but WITHOUT ANY WARRANTY; without even the implied warranty of
&apos;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
&apos;    GNU General Public License for more details.
&apos;
&apos;    You should have received a copy of the GNU General Public License
&apos;    along with this program; if not, write to the Free Software
&apos;    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA


&apos; This module containt the main function OOoLilyPond().
&apos; It also contains some sub routinges that deal with the
&apos; integration of LilyPond into OpenOffice.org


Option Explicit


Sub OOoLilyPond()

	&apos; This is the main function
	&apos; It initializes OOoLilyPond and opens the OOoLilyPond Editor dialog

	Dim oDoc As Object
	Dim oDocCtrl As Object
	Dim oSelection As Object
	Dim oShape As Object

	PrivateConstants()

	&apos; Create SimpleFileAccess Service (private object variable)
	oFileAccess = createUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
		
	&apos; Get the current document and controller
 	oDoc = ThisComponent
	oDocCtrl = oDoc.getCurrentController()

	&apos; Test if we are in OOoWriter or OOoImpress
	If oDoc.getImplementationName() =  &quot;SwXTextDocument&quot; Then
		bInWriter = True
	Elseif oDoc.getImplementationName() = &quot;SdXImpressDocument&quot; Then
		bInWriter = False
	Else
		Msgbox(oDoc.getImplementationName() &amp; &quot;: document type not supported by OOoLilyPond&quot;, 0, &quot;Error&quot;)
		Exit Sub
	End If

	&apos; Set configuration to &quot;factory default&quot;, is overwritten by settings from configuration file
	DefaultConfig()

	&apos; Read confuguration file
	If oFileAccess.exists( sConfigFile ) Then ReadConfig()

	&apos; Copy Templates If needed
	If sLilyPondVersionMajor=&quot;&quot; Then &apos; LilyPond has never been (successfully) called yet
		If LilyPondVersion() Then
			CopyTemplates()
			SaveConfig()
		Else
			MsgBox(&quot;LilyPond can not be found please check whether LilyPond is properly installed and the specified path to the LilPond executable is correct.&quot;, iMsgBox_E)
		End If
	Else &apos; LilyPond has already once been called successfully
		If Not oFileAccess.isFolder(sTemplatePath) Then CopyTemplates() &apos; For some reason the templates are not there
	End If

	&apos; Initialize Anchor and Wrap settings, we already know that ;-)
	If bInWriter Then
		sTemplate = sWriterDefaultTemplate
		iAnchor = iWriterDefaultAnchor
		iWrap = iWriterDefaultWrap
	Else
		sTemplate = sImpressDefaultTemplate
	End If

	&apos; By default use default values ;-)
	&apos; Will be overwritten if values are read from existing object
	bUseDefaultCode = True
	bUseDefaultLineWidth = True
	bUseDefaultStaffSize = True
	bUseDefaultCustom1 = True
	bUseDefaultCustom2 = True

	&apos; If an OOoLilyPond object is selected, read the OOoLilyPond Attributes
	bShapeIsSelected = False
	If Not isEmpty(oDocCtrl.selection()) Then &apos;only False in Impress when nothing is selected
		oSelection = oDocCtrl.getSelection()
		If oSelection.getImplementationName() = &quot;com.sun.star.drawing.SvxShapeCollection&quot; then
			oShape = oSelection.getByIndex(0)
			If Not ReadAttributes(oShape) Then Exit Sub &apos;Read the OOoLilyPond fields from the Object Attributes
			oShapePosition = oShape.position()
			bShapeIsSelected = True
		ElseIf oSelection.getImplementationName() = &quot;SwXTextRanges&quot; Then
			&apos;Nothing or normal text is selected
			bShapeIsSelected = False
		Else
			Msgbox (&quot;The selected object is not an OOoLilyPond object ...&quot;, 0, &quot;Error&quot;)
			Exit Sub
		End If
	End If

	&apos; Now we know which template to use
	ReadTemplate()

	&apos; Open the dialog box
	EditorDialog()
End Sub


sub Make()
	&apos; Calls the subroutines that generate the image and
	&apos; insert the image into the document.

	&apos; Test if there is LilyPond code
	If sCode = &quot;&quot; then 
		Msgbox (&quot;Enter LilyPond code...&quot;, 0, &quot;Error&quot;)
		exit sub
	end if

	If Not ApplyTemplate() Then Exit Sub

	CleanUp()

	If Not WriteLyFile() Then Exit Sub

	If Not CallLilyPond() Then Exit Sub

  	ParseOutput(sTmpPath &amp; &quot;OOoLilyPond.out&quot;)
 	
	&apos;If there is no eps output
	If Not oFileAccess.exists(sTmpPath &amp; &quot;OOoLilyPond.eps&quot;) Then &apos; LilyPond error.
  		iErrNum = 1
  		DisplayError()
  		Exit Sub
  	End If

	&apos;If there is no png output
 	If sFormat = &quot;png&quot; And (Not oFileAccess.exists(sTmpPath &amp; &quot;OOoLilyPond.png&quot;)) Then
 		MsgBox(&quot;No png output is found&quot;, 0, &quot;Error&quot;)
  		Exit Sub
 	End If
 
 	InsertOOoLilyPondObject()
 	
 	&apos;If there were warnings
 	If iNErr &gt;= 1 And Not bIgnoreWarnings Then
	
 	 	iErrNum = 1
  		DisplayError()
  		Exit Sub
 	End If

	&apos; Close the dialog
	oEditorDialog.endExecute()
	
End Sub


Sub InsertAttribute(oGraphic As Object, sName, sValue As String)
	Dim oAttributes, oLilyPondAttribute As Object
	&apos; Add a user defined attribute to the image.
	oAttributes = oGraphic.UserDefinedAttributes
    oLilyPondAttribute = createUnoStruct( &quot;com.sun.star.xml.AttributeData&quot; )
   	oLilyPondAttribute.Type = &quot;CDATA&quot;      		
    oLilyPondAttribute.Value = sValue
    oAttributes.insertByName(sName, oLilyPondAttribute )
	oGraphic.UserDefinedAttributes = oAttributes
End Sub


Sub InsertOOoLilyPondObject()
	Dim oDoc, oDocCtrl, oDispatcher, oAttributes, oViewCursor, oGraphic, oLilyPondAttribute As Object

	&apos; Create the Controller and dispatcher for current document...
	oDoc = StarDesktop.CurrentComponent
	oDocCtrl = oDoc.getCurrentController()
	oDispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)

	if bInWriter then

		&apos;ToDo: Don&apos;t use the Dispatcher
		if bShapeIsSelected then
			&apos;Remove the old image...
			oDispatcher.executeDispatch( oDocCtrl.Frame, &quot;.uno:Cut&quot;, &quot;&quot;, 0, Array())
		else
			&apos;Get the cursor position...
			Dim oCursor, oText as Object
			oViewCursor =  oDocCtrl.ViewCursor
			oText = oDoc.Text
			oCursor = oViewCursor.Text.createTextCursorByRange(oViewCursor)
		end if

		&apos;Import the new image to the clipboard and paste it...
   		ImportGraphicIntoClipboard(ConvertToURL( sTmpPath &amp; &quot;OOoLilyPond.&quot;&amp; sFormat))	
		oDispatcher.executeDispatch( oDocCtrl.Frame, &quot;.uno:Paste&quot;, &quot;&quot;, 0, Array())
	  	oGraphic = oDocCtrl.getSelection().GetByIndex(0)

		&apos; set image properties
		oGraphic.AnchorType = iAnchor
		oGraphic.Surround = iWrap			

		&apos; To do:
		&apos; The staff size is limitied to 19.5 cm
		&apos; This is because the graphic is first loaded into a new draw document of format A4 portrait
		oGraphic.TopMargin = 0
		oGraphic.BottomMargin = 0
		oGraphic.VertOrient = 0

		if not bShapeIsSelected then
			&apos; Show cursor...
			&apos; To do: don&apos;t use dispatcher
			oDispatcher.executeDispatch(oDocCtrl.Frame, &quot;.uno:Escape&quot;, &quot;&quot;, 0, Array())
			oCursor.goRight(0,false)
			oViewCursor.gotoRange(oCursor, False)
		end if

	else &apos;We are in Impress
		
		if  bShapeIsSelected then
			&apos; Remove the old image...
			oDispatcher.executeDispatch(oDocCtrl.Frame,&quot;.uno:Cut&quot;,&quot;&quot;, 0, Array() )
		end if
		
		&apos;Import the new image to the clipboard and paste it...
		&apos; To do: don&apos;t use dispatcher
   		ImportGraphicIntoClipboard(ConvertToURL( sTmpPath &amp; &quot;OOoLilyPond.&quot;&amp; sFormat))	
		oDispatcher.executeDispatch( oDocCtrl.Frame, &quot;.uno:Paste&quot;, &quot;&quot;, 0, Array())
	  	oGraphic = oDocCtrl.getSelection().getByIndex(0)

		if bShapeIsSelected then oGraphic.position = oShapePosition

	end if

	InsertAttribute(oGraphic, &quot;OOoLilyPondCode&quot;, sCode)
	InsertAttribute(oGraphic, &quot;OOoLilyPondTemplate&quot;, sTemplate)
	InsertAttribute(oGraphic, &quot;OOoLilyPondLineWidth&quot;, sLineWidth)
	InsertAttribute(oGraphic, &quot;OOoLilyPondStaffSize&quot;, sStaffSize)
	InsertAttribute(oGraphic, &quot;OOoLilyPondCustom1&quot;, sCustom1)
	InsertAttribute(oGraphic, &quot;OOoLilyPondCustom2&quot;, sCustom2)
	InsertAttribute(oGraphic, &quot;OOoLilyPondUseDefaultCode&quot;, BoolToString(bUseDefaultCode))
	InsertAttribute(oGraphic, &quot;OOoLilyPondUseDefaultLineWidth&quot;, BoolToString(bUseDefaultLineWidth))
	InsertAttribute(oGraphic, &quot;OOoLilyPondUseDefaultStaffSize&quot;, BoolToString(bUseDefaultStaffSize))
	InsertAttribute(oGraphic, &quot;OOoLilyPondUseDefaultCustom1&quot;, BoolToString(bUseDefaultCustom1))
	InsertAttribute(oGraphic, &quot;OOoLilyPondUseDefaultCustom2&quot;, BoolToString(bUseDefaultCustom2))

End Sub


Function ReadAttributes( oShape As Object ) As Boolean
	Dim sLyAttributes As Variant &apos;Output of Split Function

	If bInWriter Then
		iAnchor=oShape.AnchorType
		iWrap=oShape.Surround
	Else
		iAnchor=-1
		iWrap=-1
	End IF

	If oShape.UserDefinedAttributes().hasByName(&quot;OOoLilyPondArgs&quot;) Then
		&apos;Object created by OOoLilyPond Versions &lt;= 0.2.1
		sLyAttributes=oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondArgs&quot;).Value
		sLyAttributes=Split(oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondArgs&quot;).Value, &quot;ยง&quot;, 4)
		sTemplate=sLyAttributes(0)
		sCode=sLyAttributes(3)
		bUseDefaultCode=False
		ReadAttributes = True
		Exit Function
	End If

	If oShape.UserDefinedAttributes().hasByName(&quot;OOoLilyPondCode&quot;) Then
		sCode=oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondCode&quot;).Value
	Else
		Msgbox (&quot;The selected object is not an OOoLilyPond object ...&quot;, 0, &quot;Error&quot;)
		ReadAttributes = False
		Exit Function
	End If

	&apos; Attribute does exist since OOoLilyPond 0.3, existance mustn&apos;t be checked
	sTemplate=oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondTemplate&quot;).Value

	&apos; The following Attributes do exist only since OOoLilyPond 0.4	
	If oShape.UserDefinedAttributes().hasByName(&quot;OOoLilyPondUseDefaultCode&quot;) Then
		bUseDefaultCode=StringToBool(oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondUseDefaultCode&quot;).Value)
		sLineWidth=oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondLineWidth&quot;).Value
		bUseDefaultLineWidth=StringToBool(oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondUseDefaultLineWidth&quot;).Value)
		sStaffSize=oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondStaffSize&quot;).Value
		sCustom1=oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondCustom1&quot;).Value
		sCustom2=oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondCustom2&quot;).Value
		bUseDefaultStaffSize=StringToBool(oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondUseDefaultStaffSize&quot;).Value)
		bUseDefaultCustom1=StringToBool(oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondUseDefaultCustom1&quot;).Value)
		bUseDefaultCustom2=StringToBool(oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondUseDefaultCustom2&quot;).Value)
	Else
		&apos;Prevent loosing the code for OOoLilyPond 0.3 Objects
		bUseDefaultCode=False
	End If

    ReadAttributes=True
    
End Function




</script:module>