<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="LilyPond" script:language="StarBasic">&apos; Functions that deal with LilyPond

Option Explicit

Function CallLilyPond() As Boolean
	Dim sCommand As String
	Dim sBackendOpt As String

	sBackendOpt=&quot;-dbackend=eps&quot;
	If 	Val(sLilyPondVersionMajor)=2 and Val(sLilyPondVersionMinor)&lt;=10 Then
		sBackendOpt=&quot;-b eps&quot;
	End If
	If sFormat=&quot;svg&quot; Then				&apos;%%%%% Modified KB
		sBackendOpt=&quot;-dbackend=svg&quot;		&apos;%%%%% Modified KB
	End If								&apos;%%%%% Modified KB
	
	If sOSType = &quot;Unix&quot; Then

		sCommand=&quot;cd &quot; &amp; Chr(34) &amp; ConvertFromURL(sTmpPath) &amp; Chr(34) &amp; &quot;; &quot; _
		&amp; Chr(34) &amp; sLilyPondExecutable &amp; Chr(34)
		If Len(sIncludeStatement) &gt; 0 Then
			sCommand = sCommand &amp; &quot; &quot; &amp; sIncludeStatement
		End If
		If sFormat=&quot;png&quot; Then
			sCommand = sCommand &amp; &quot; -dno-delete-intermediate-files --png &quot; &amp; sBackendOpt &amp; &quot; -dresolution=&quot; &amp; iGraphicDPI &amp; &quot; &quot; &amp; constOLyFileName &amp; &quot;.ly &gt;&quot; &amp; constOLyFileName &amp; &quot;.out 2&gt;&amp;1; &quot; &apos;%%%%% Modified KB
		ElseIf sFormat=&quot;eps&quot; Then
			sCommand = sCommand &amp; &quot; &quot; &amp; sBackendOpt &amp; &quot; -f eps &quot; &amp; constOLyFileName &amp; &quot;.ly &gt;&quot; &amp; constOLyFileName &amp; &quot;.out 2&gt;&amp;1; &quot;
		ElseIf sFormat=&quot;svg&quot; Then   &apos;%%%%% Modified KB
			sCommand = sCommand &amp; &quot; &quot; &amp; sBackendOpt &amp; &quot; &quot; &amp; constOLyFileName &amp; &quot;.ly &gt;&quot; &amp; constOLyFileName &amp; &quot;.out 2&gt;&amp;1; &quot;   &apos;%%%%% Modified KB
		End If
		sCommand=sCommand &amp; &quot;if [ $? -ge 126 ]; then touch LilyPond-cannot_execute; fi&quot; &apos; not found -&gt; 127, denied -&gt;126
		BashCommand(sCommand)

	ElseIf sOSType = &quot;Windows&quot; Then

		sCommand = &quot;cd /d &quot; &amp; Chr(34) &amp; ConvertFromURL(sTmpPath) &amp; Chr(34) &amp; Chr(10) _
		&amp; Chr(34) &amp; sLilyPondExecutable &amp; Chr(34)
		If Len(sIncludeStatement) &gt; 0 Then
			sCommand = sCommand &amp; &quot; &quot; &amp; sIncludeStatement
		End If
		If sFormat=&quot;png&quot; Then
			sCommand = sCommand &amp; &quot; -dno-delete-intermediate-files --png &quot; &amp; sBackendOpt &amp; &quot; -dresolution=&quot; &amp; iGraphicDPI &amp; &quot; &quot; &amp; constOLyFileName &amp; &quot;.ly &gt;&quot; &amp; constOLyFileName &amp; &quot;.out 2&gt;&amp;1&quot; &amp;Chr(10) &apos;%%%%% Modified KB
		ElseIf sFormat=&quot;eps&quot; Then
			sCommand = sCommand &amp; &quot; &quot; &amp; sBackendOpt &amp; &quot; -f eps &quot; &amp; constOLyFileName &amp; &quot;.ly &gt;&quot; &amp; constOLyFileName &amp; &quot;.out 2&gt;&amp;1&quot; &amp; Chr(10)
		ElseIf sFormat=&quot;svg&quot; Then   &apos;%%%%% Modified KB	%%%%% This option is not (yet) supported by LilyPond, I should have known...   :(
			sCommand = sCommand &amp; &quot; &quot; &amp; sBackendOpt &amp; &quot; &quot; &amp; constOLyFileName &amp; &quot;.ly &gt;&quot; &amp; constOLyFileName &amp; &quot;.out 2&gt;&amp;1&quot; &amp; Chr(10)   &apos;%%%%% Modified KB
		End If
		sCommand=sCommand &amp; &quot;if errorlevel 9009 echo cannot execute &gt;LilyPond-cannot_execute&quot; &apos;ToDo: 9009 OK? Other errors? Wrong Permissions?
		WindowsCommand(sCommand)

	End If

	If oFileAccess.exists(sTmpPath &amp; &quot;LilyPond-cannot_execute&quot;) then
		MsgBox &quot;LilyPond cannot be executed.&quot; &amp; Chr(10) _
		&amp; &quot;Check the path specified for the lilypond executable in the configuration dialog,&quot; &amp; Chr(10) _
		&amp; &quot;your LilyPond installation and permissions.&quot;
		CallLilyPond=False &apos;lilypond was not executed
	Else
		CallLilyPond=True &apos;lilypond was executed
	End If

End Function


Sub CleanUp()
	If 	oFileAccess.exists(sTmpPath &amp; &quot;LilyPond-version.out&quot;) Then oFileAccess.kill(sTmpPath &amp; &quot;LilyPond-version.out&quot;)
	If 	oFileAccess.exists(sTmpPath &amp; &quot;LilyPond-cannot_execute&quot;) Then oFileAccess.kill(sTmpPath &amp; &quot;LilyPond-cannot_execute&quot;)
	If 	oFileAccess.exists(sTmpPath &amp; constOLyFileName &amp; &quot;.out&quot;) Then oFileAccess.kill(sTmpPath &amp; constOLyFileName &amp; &quot;.out&quot;)
	If 	oFileAccess.exists(sTmpPath &amp; constOLyFileName &amp; &quot;.eps&quot;) Then oFileAccess.kill(sTmpPath &amp; constOLyFileName &amp; &quot;.eps&quot;)
	If 	oFileAccess.exists(sTmpPath &amp; constOLyFileName &amp; &quot;-1.eps&quot;) Then oFileAccess.kill(sTmpPath &amp; constOLyFileName &amp; &quot;-1.eps&quot;)
	If 	oFileAccess.exists(sTmpPath &amp; constOLyFileName &amp; &quot;-systems.tex&quot;) Then oFileAccess.kill(sTmpPath &amp; constOLyFileName &amp; &quot;-systems.tex&quot;)
	If 	oFileAccess.exists(sTmpPath &amp; constOLyFileName &amp; &quot;-systems.texi&quot;) Then oFileAccess.kill(sTmpPath &amp; constOLyFileName &amp; &quot;-systems.texi&quot;)
	If 	oFileAccess.exists(sTmpPath &amp; constOLyFileName &amp; &quot;.ly&quot;) Then oFileAccess.kill(sTmpPath &amp; constOLyFileName &amp; &quot;.ly&quot;)
	If 	oFileAccess.exists(sTmpPath &amp; constOLyFileName &amp; &quot;Temp.ly&quot;) Then oFileAccess.kill(sTmpPath &amp; constOLyFileName &amp; &quot;Temp.ly&quot;)	&apos; %%%%% Added by KB
	If 	oFileAccess.exists(sTmpPath &amp; constOLyFileName &amp; &quot;.png&quot;) Then oFileAccess.kill(sTmpPath &amp; constOLyFileName &amp; &quot;.png&quot;)
	If 	oFileAccess.exists(sTmpPath &amp; constOLyFileName &amp; &quot;.svg&quot;) Then oFileAccess.kill(sTmpPath &amp; constOLyFileName &amp; &quot;.svg&quot;)		&apos; %%%%% Added by KB
End Sub


Function LilyPondVersion() As Boolean
	Dim sCommand As String
	Dim oTextInputStream As Object
	dim sLine As String
	dim sWords() As String
	dim sLilyPondVersion() As String
	dim i As Integer
	
	Cleanup()
	
	If sOSType = &quot;Unix&quot; Then

		sCommand=&quot;cd &quot; &amp; Chr(34) &amp; ConvertFromURL(sTmpPath) &amp; Chr(34) &amp; &quot;; &quot; _
		&amp; Chr(34) &amp; sLilyPondExecutable &amp; Chr(34) &amp; &quot; --version &gt;&quot; &amp; constOLyFileName &amp; &quot;.out; &quot; _
		&amp; &quot;if [ $? -ge 126 ]; then touch LilyPond-cannot_execute; fi&quot; &apos; not found -&gt; 127, denied -&gt;126
		BashCommand(sCommand)

	ElseIf sOSType = &quot;Windows&quot; Then &apos;ToDo: create Windows command (now wrong command, copied from standard LilyPond Call)

		sCommand = &quot;cd /d &quot; &amp; Chr(34) &amp; ConvertFromURL(sTmpPath) &amp; Chr(34) &amp; Chr(10) _
		&amp; Chr(34) &amp; sLilyPondExecutable &amp; Chr(34) &amp; &quot; --version &gt;&quot; &amp; constOLyFileName &amp; &quot;.out 2&gt;&amp;1&quot; &amp; Chr(10) _
		&amp; &quot;if errorlevel 9009 echo cannot execute &gt;LilyPond-cannot_execute&quot; &apos;ToDo: 9009 OK? Other errors? Wrong Permissions?
		WindowsCommand(sCommand)

	End If

	If oFileAccess.exists(sTmpPath &amp; &quot;LilyPond-cannot_execute&quot;) then
		MsgBox &quot;LilyPond cannot be executed.&quot; &amp; Chr(10) _
		&amp; &quot;Check the path specified for the lilypond executable in the configuration dialog,&quot; &amp; Chr(10) _
		&amp; &quot;your LilyPond installation and permissions.&quot;
		sLilyPondVersionMajor = &quot;&quot;
		sLilyPondVersionMinor = &quot;&quot;
		LilyPondVersion = False &apos;lilypond was not executed
	Else
		&apos; read first line of output
		&apos; Open input stream
		oTextInputStream  = createUnoService(&quot;com.sun.star.io.TextInputStream&quot;)
    	oTextInputStream.setInputStream(oFileAccess.openFileRead(sTmpPath &amp; constOLyFileName &amp; &quot;.out&quot;))
		sLine = oTextInputStream.readLine()
		oTextInputStream.closeInput()
		
		&apos; extract version number and split into main version, sub version and sub sub version
		sWords = Split(sLine, &quot; &quot;)
		sLilyPondVersion = Split(sWords(UBound(sWords)), &quot;.&quot;)
		sLilyPondVersionMajor = sLilyPondVersion(LBound(sLilyPondVersion))
		sLilyPondVersionMinor = sLilyPondVersion(LBound(sLilyPondVersion)+1)		
		LilyPondVersion=True &apos;lilypond was executed
	End If

End Function


Sub ParseOutput(sFile as String)

	Dim vArray As Variant
	Dim oTextInputStream As Object
	Dim sLine As String
	Dim i As Integer
	
	if Not oFileAccess.exists(sFile) then
		Msgbox(&quot;Error the LilyPond output file does not exist:&quot; &amp; Chr(10) &amp; sFile, iMsgBoxE, &quot;Error&quot;)
		exit sub
	end if

	iNErr = 0 &apos;Number of Errors
	
	oTextInputStream  = createUnoService(&quot;com.sun.star.io.TextInputStream&quot;)
   	oTextInputStream.setInputStream(oFileAccess.openFileRead(sTmpPath &amp; constOLyFileName &amp; &quot;.out&quot;))

 	While not oTextInputStream.isEof()

		sLine = oTextInputStream.readLine()

  		vArray = Split(sLine, &quot;:&quot;)
  		
		If isArray(vArray) Then
			If UBound(vArray)&gt;=LBound(vArray) Then
			
				If vArray(LBound(vArray)) = constOLyFileName &amp; &quot;.ly&quot; Then
					iNErr = iNErr + 1
					iErrRow(iNErr) = Val(vArray(LBound(vArray)+1))
					iErrCol(iNErr) = Val(vArray(LBound(vArray)+2))
				&apos;	If vArray(LBound(vArray)+3) = &quot; error&quot; Then
					If (vArray(LBound(vArray)+3) = &quot; error&quot;) Or (vArray(LBound(vArray)+3) = &quot; Fehler&quot;) Then	&apos; %%%%% Modified KB
						iErrClass(iNErr)=2 &apos;Error
					Else
						iErrClass(iNErr)=1 &apos;Warning
					EndIf
					sErrMsg(iNErr) = vArray(LBound(vArray)+4)
					For i = 5 to UBound(vArray) - LBound(vArray)
						sErrMsg(iNErr) = sErrMsg(iNErr) &amp; &quot;:&quot; &amp; vArray(LBound(vArray)+i)
					Next
				End If
				
			End If
		End If
	wend

	oTextInputStream.closeInput()

End sub


Function WriteLyFile() As Boolean

	Dim oTextStream As Object
	Dim sLyFile As String

	WriteLyFile=False	&apos; %%%%% Added by KB

	&apos; Open output stream
	oTextStream  = createUnoService(&quot;com.sun.star.io.TextOutputStream&quot;)

	sLyFile = sTmpPath &amp; constOLyFileName &amp; &quot;.ly&quot;
	If oFileAccess.exists( sLyFile ) Then oFileAccess.kill(sLyFile )	
    oTextStream.setOutputStream(oFileAccess.openFileWrite(sLyFile))
 
	&apos; Write LilyPond Code
    oTextStream.writeString(sLilyPondCode)

	oTextStream.closeOutput()

	WriteLyFile=True
	
End Function


Function WriteTempLyFile() As Boolean	&apos; %%%%% Added by KB

	Dim oTextStream As Object
	Dim sLyFile As String
	
	WriteTempLyFile=False

	&apos; Open output stream
	oTextStream  = createUnoService(&quot;com.sun.star.io.TextOutputStream&quot;)

	sLyFile = sTmpPath &amp; constOLyFileName &amp; &quot;Temp.ly&quot;
	If oFileAccess.exists( sLyFile ) Then oFileAccess.kill(sLyFile )	
    oTextStream.setOutputStream(oFileAccess.openFileWrite(sLyFile))
 
	&apos; Write LilyPond Code
    oTextStream.writeString(sLilyPondCode)

	oTextStream.closeOutput()

	WriteTempLyFile=True
	
End Function

</script:module>