<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Editor" script:language="StarBasic">&apos; Subs and Functions related with the OOoLilyPond Editor Dialogue

Option Explicit


&apos; ***************************************************
&apos;    Open / Update the OOoLilyPond Editor dialogue
&apos; ***************************************************

Sub EditorDialog()

	Dim oFieldModel As Object							&apos; %%%%% Added KB
	Dim myFont As New com.sun.star.awt.FontDescriptor	&apos; %%%%% Added KB

	&apos; Load the library OOoLilyPond...
	DialogLibraries.LoadLibrary( constOLyLibraryName )
	
	&apos; Create the dialog object
	oEditorDialog = createUnoDialog( DialogLibraries.GetByName(constOLyLibraryName).GetByName(&quot;GUI_Editor&quot;) )

	&apos; %%%%% Added by KB: Change the font of the editor pane
	oFieldModel = oEditorDialog.getControl(&quot;sCode&quot;).getModel()
	MyFont.Name = sEditorFontName
	&apos; MyFont.StyleName = &quot;Fett&quot;  &apos; bad idea...
	MyFont.Height = sEditorFontSize
	oFieldModel.FontDescriptor = MyFont
    &apos; %%%%% 
  
	&apos; Fill in the values
	If bUseDefaultCode Then
		sCode=&quot;&quot;
		UseDefaultCode()
	Else
		oEditorDialog.getControl(&quot;sCode&quot;).setText(sCode)
	End If

	If bUseDefaultLineWidth Then
		UseDefaultLineWidth()
	Else
		oEditorDialog.getControl(&quot;sLineWidth&quot;).setText(sLineWidth)
	End if
	
	If bUseDefaultStaffSize Then
		UseDefaultStaffSize()
	Else
		oEditorDialog.getControl(&quot;sStaffSize&quot;).setText(sStaffSize)
	End If
	
	If bUseDefaultCustom1 Then
		UseDefaultCustom1()
	Else
		oEditorDialog.getControl(&quot;sCustom1&quot;).setText(sCustom1)
	End If
	
	If bUseDefaultCustom2 Then
		UseDefaultCustom2()
	Else
		oEditorDialog.getControl(&quot;sCustom2&quot;).setText(sCustom2)
	End If

	&apos; Fill the Template Combobox
	Select Case ListOfTemplates(oEditorDialog.getControl(&quot;sTemplate&quot;))
	Case 1
		MsgBox(&quot;No templates are found at the path: &quot; &amp;  Chr(10) &amp; Chr(34) &amp; ConvertFromURL(sTemplatePath) &amp; Chr(34) &amp; &quot;.&quot; &amp; Chr(10) &amp; constOLyLibraryName &amp; &quot; will not work without a template.&quot;)
	Case 2
		MsgBox(&quot;The template path &quot; &amp;  Chr(10) &amp; Chr(34) &amp; ConvertFromURL(sTemplatePath) &amp; Chr(34) &amp; &quot; is not found.&quot;) &apos; Should never happen here.
	End Select
	oEditorDialog.getControl(&quot;sTemplate&quot;).setText(sTemplate)

	&apos; Anchor settings
	If iAnchor = com.sun.star.text.TextContentAnchorType.AS_CHARACTER Then oEditorDialog.getControl(&quot;AnchorAsCharacter&quot;).setState(true)
	If iAnchor = com.sun.star.text.TextContentAnchorType.AT_PARAGRAPH Then  oEditorDialog.getControl(&quot;AnchorToParagraph&quot;).setState(true)
	If iAnchor = com.sun.star.text.TextContentAnchorType.AT_PAGE Then oEditorDialog.getControl(&quot;AnchorToPage&quot;).setState(true)

	If iWrap = com.sun.star.text.WrapTextMode.NONE Then oEditorDialog.getControl(&quot;NoWrap&quot;).setState(true)
	If iWrap = com.sun.star.text.WrapTextMode.DYNAMIC Then oEditorDialog.getControl(&quot;OptimalPageWrap&quot;).setState(true)
	If iWrap = com.sun.star.text.WrapTextMode.THROUGHT Then oEditorDialog.getControl(&quot;WrapThrough&quot;).setState(true)	
	
	oEditorDialog.getControl(&quot;bKeepCrop&quot;).setState (BoolToCheckBoxState(bKeepCrop And bShapeIsSelected))

	&apos; grey out inactive control elements
	GreyOut()

	&apos; open the dialog
    oEditorDialog.Execute()
End Sub


Sub GreyOut()
	&apos; Grey out inactive control elements

	Dim bWrapSettings As Boolean

	&apos; Check if dialog is existing
	If IsNull(oEditorDialog) Then Exit Sub

	bWrapSettings = (Not oEditorDialog.getControl(&quot;AnchorAsCharacter&quot;).getState()) And bInWriter

	&apos; grey out Anchor and Wrap radio buttons when we are not in Writer
	oEditorDialog.getControl(&quot;AnchorFrameControl&quot;).setEnable(bInWriter)
	oEditorDialog.getControl(&quot;AnchorAsCharacter&quot;).setEnable(bInWriter)
	oEditorDialog.getControl(&quot;AnchorToParagraph&quot;).setEnable(bInWriter)
	oEditorDialog.getControl(&quot;AnchorToPage&quot;).setEnable(bInWriter)

	&apos; grey out Wrap radio buttons when Anchor is &quot;as Character&quot;
	oEditorDialog.getControl(&quot;WrapFrameControl&quot;).setEnable(bWrapSettings)
	oEditorDialog.getControl(&quot;NoWrap&quot;).setEnable(bWrapSettings)
	oEditorDialog.getControl(&quot;OptimalPageWrap&quot;).setEnable(bWrapSettings)
	oEditorDialog.getControl(&quot;WrapThrough&quot;).setEnable(bWrapSettings)

	&apos; grey out KeepCrop checkbox when no current OLy object is selected
	oEditorDialog.getControl(&quot;bKeepCrop&quot;).setEnable(bShapeIsSelected)

	&apos; grey out Input Fields
	oEditorDialog.getControl(&quot;sLineWidth&quot;).setEnable(bLineWidthFieldExists)
	oEditorDialog.getControl(&quot;sStaffSize&quot;).setEnable(bStaffSizeFieldExists)
	oEditorDialog.getControl(&quot;sCustom1&quot;).setEnable(bCustom1FieldExists)
	oEditorDialog.getControl(&quot;sCustom2&quot;).setEnable(bCustom2FieldExists)

	oEditorDialog.getControl(&quot;bUseDefaultLineWidth&quot;).setEnable(bLineWidthFieldExists)
	oEditorDialog.getControl(&quot;bUseDefaultStaffSize&quot;).setEnable(bStaffSizeFieldExists)
	oEditorDialog.getControl(&quot;bUseDefaultCustom1&quot;).setEnable(bCustom1FieldExists)
	oEditorDialog.getControl(&quot;bUseDefaultCustom2&quot;).setEnable(bCustom2FieldExists)

End Sub


&apos; ********************************
&apos;    Jump to and display errors
&apos; ********************************

Sub NextErrButton
	If iErrNum&lt;iNErr Then
		iErrNum = iErrNum + 1
		DisplayError()
	End If
	If iErrNum&gt;=1 And iErrNum &lt;=iNErr Then
		DisplayError()
	End If
End Sub


Sub PrevErrButton
	If iErrNum&gt;1 Then
		iErrNum = iErrNum - 1		
	End If
	If iErrNum&gt;=1 And iErrNum &lt;=iNErr Then
		DisplayError()
	End If	
End Sub


Sub DisplayError()
	Dim sText as String
	If iErrClass(iErrNum) = 1 Then &apos; Warning
		sText = &quot;Warning: &quot; &amp; sErrMsg(iErrNum)
	ElseIf	iErrClass(iErrNum) = 2 Then &apos; Error
		sText = &quot;Error: &quot; &amp; sErrMsg(iErrNum)
	End If
	oEditorDialog.getControl(&quot;sErrMsg&quot;).setText(sText)
	GotoError(iErrNum)
End Sub


Sub GotoError(n)
	&apos; set Curser to Error

	Dim oSelection As Object
	Dim iLilyPondCodePos As Integer &apos; Error position in sLilyPondCode
	Dim iErrPos As Integer &apos; Error position in OOoLilyPond field
	Dim oErrField As Object &apos; OOoLilyPond field that contains the error
	
	&apos; Calculate cursor position
	iLilyPondCodePos = RowColToPos(sLilyPondCode, iErrRow(n), iErrCol(n))
	iLilyPondCodePos = iLilyPondCodePos + 2 &apos; Correction needed, don&apos;t know why

	If  ( iLilyPondCodePos &gt;= iCodeStartPos ) And ( iLilyPondCodePos &lt;= iCodeStartPos + Len(sCode)  ) Then
		iErrPos = iLilyPondCodePos - iCodeStartPos
		oErrField = oEditorDialog.getControl(&quot;sCode&quot;)
	End If

	If  ( iLilyPondCodePos &gt;= iLineWidthStartPos ) And ( iLilyPondCodePos &lt;= iLineWidthStartPos + Len(sLineWidth)  ) Then
		iErrPos = iLilyPondCodePos - iLineWidthStartPos
		oErrField = oEditorDialog.getControl(&quot;sLineWidth&quot;)
	End If

	If  ( iLilyPondCodePos &gt;= iStaffSizeStartPos ) And ( iLilyPondCodePos &lt;= iStaffSizeStartPos + Len(sStaffSize)  ) Then
		iErrPos = iLilyPondCodePos - iStaffSizeStartPos
		oErrField = oEditorDialog.getControl(&quot;sStaffSize&quot;)
	End If

	If  ( iLilyPondCodePos &gt;= iCustom1StartPos ) And ( iLilyPondCodePos &lt;= iCustom1StartPos + Len(sCustom1)  ) Then
		iErrPos = iLilyPondCodePos - iCustom1StartPos
		oErrField = oEditorDialog.getControl(&quot;sCustom1&quot;)
	End If

	If  ( iLilyPondCodePos &gt;= iCustom2StartPos ) And ( iLilyPondCodePos &lt;= iCustom2StartPos + Len(sCustom2)  ) Then
		iErrPos = iLilyPondCodePos - iCustom2StartPos
		oErrField = oEditorDialog.getControl(&quot;sCustom2&quot;)
	End If

	If Not IsNull(oErrField) Then &apos; If error is within a OOoLilyPond Field
		
		oSelection = createUnoStruct( &quot;com.sun.star.awt.Selection&quot; )
		oSelection.min=iErrPos
		oSelection.max=iErrPos

		&apos; If an message box is displayed before, setting the curser may not work without waiting some time
		Wait(100)

		oErrField.setFocus()
		oErrField.getView().setSelection(oSelection)
	
	End If

End Sub


Sub ShowLilyPondOutput()
	Dim oOutputDialog As Object
	Dim sOutput As String

	If StringFromFile(sOutput, sTmpPath &amp; constOLyFileName &amp; &quot;.out&quot;) Then

		DialogLibraries.LoadLibrary( constOlyLibraryName )
		oOutputDialog = createUnoDialog( DialogLibraries.GetByName(constOLyLibraryName).GetByName(&quot;GUI_Out&quot;) )
		oOutputDialog.getControl(&quot;sOutput&quot;).setText(sOutput)
		oOutputDialog.Execute()
	
	Else
		MsgBox(&quot;There is no LilyPond output.&quot;)
	End If
End Sub

Sub CallExtEditor()	&apos; %%%%% Added by KB

	Dim sCommand As String
	Dim sParam As String
	
	If sOSType = &quot;Unix&quot; Then
		sCommand=&quot;cd &quot; &amp; Chr(34) &amp; ConvertFromURL(sTmpPath) &amp; Chr(34) &amp; &quot;; &quot; _
		&amp; Chr(34) &amp; sExtEditorExecutable &amp; Chr(34) &amp; &quot; &quot; &amp; constOLyFileName &amp; &quot;Temp.ly; if [ $? -ge 126 ]; then touch ExtEditor-cannot_execute; fi&quot; &apos; not found -&gt; 127, denied -&gt;126
		BashCommand(sCommand)
	ElseIf sOSType = &quot;Windows&quot; Then
		
		If Not oFileAccess.exists(sExtEditorExecutable) Then
 			MsgBox(&quot;No valid file name / path for External Editor is specified.&quot;, 0, &quot;Error&quot;)
  			Exit Sub
 		End If
		
		sCommand = sExtEditorExecutable
		sParam = ConvertFromURL(sTmpPath) &amp; &quot;\&quot; &amp; constOLyFileName &amp; &quot;Temp.ly&quot;
		&apos; ----------------------------------------------------------------------
		  Shell (sCommand, 1, sParam, False)  								&apos;	|
		&apos; If you get a BASIC runtime error like &quot;file not found&quot; right here,	|	
		&apos; your &quot;External Editor Path&quot; setting 									|
		&apos; probably points to an existing file that is NOT an executable file. 	|
		&apos; ----------------------------------------------------------------------
	End If

End Sub



&apos; *******************
&apos;    Button Events
&apos; *******************

Sub AnchorButton()
	GreyOut()
End Sub


Sub ConfigButton()
	ConfigDialog()
	ListOfTemplates(oEditorDialog.getControl(&quot;sTemplate&quot;))
	ReadTemplate() &apos; Needed if template folder changed

	If bUseDefaultLineWidth Then UseDefaultLineWidth()
	If bUseDefaultStaffSize Then UseDefaultStaffSize()
	If bUseDefaultCustom1 Then UseDefaultCustom1()
	If bUseDefaultCustom2 Then UseDefaultCustom2()

	GreyOut()
End Sub


Sub EditTemplateButton
	TmplDialog()
	ListOfTemplates(oEditorDialog.getControl(&quot;sTemplate&quot;))
	&apos; sTemplate name changes when saved under a new name
	oEditorDialog.getControl(&quot;sTemplate&quot;).setText(sTemplate)
End Sub

Sub LilyPondButton()

	&apos; all values except for the Anchor, Wrap and Size/Crop settings should already be updated
	if oEditorDialog.getControl(&quot;AnchorAsCharacter&quot;).getState() then iAnchor = com.sun.star.text.TextContentAnchorType.AS_CHARACTER
	if oEditorDialog.getControl(&quot;AnchorToParagraph&quot;).getState() then iAnchor = com.sun.star.text.TextContentAnchorType.AT_PARAGRAPH
	if oEditorDialog.getControl(&quot;AnchorToPage&quot;).getState() then iAnchor = com.sun.star.text.TextContentAnchorType.AT_PAGE

	if oEditorDialog.getControl(&quot;NoWrap&quot;).getState() then iWrap = com.sun.star.text.WrapTextMode.NONE
	if oEditorDialog.getControl(&quot;OptimalPageWrap&quot;).getState() then iWrap = com.sun.star.text.WrapTextMode.DYNAMIC
	if oEditorDialog.getControl(&quot;WrapThrough&quot;).getState() then iWrap = com.sun.star.text.WrapTextMode.THROUGHT
	
	bKeepCrop = CheckBoxStateToBool (oEditorDialog.getControl(&quot;bKeepCrop&quot;).getState())

	&apos; Create the LilyPond music and insert it...
	Make()

End Sub

Sub ExtEditorButton()	&apos; %%%%% Added by KB

	If Not ApplyTemplate() Then Exit Sub
	CleanUp()
	If Not WriteTempLyFile() Then Exit Sub
	CallExtEditor()
	
End Sub

Sub ImportButton()	&apos; %%%%% Added by KB

	If Not ReadTempLyFile() Then Exit Sub
	oEditorDialog.getControl(&quot;sCode&quot;).setText(sCode)
	
	If bLineWidthFieldExists Then
		oEditorDialog.getControl(&quot;sLineWidth&quot;).setText(sLineWidth)
	End if
	
	If bStaffSizeFieldExists Then
		oEditorDialog.getControl(&quot;sStaffSize&quot;).setText(sStaffSize)
	End If
	
	If bCustom1FieldExists Then
		oEditorDialog.getControl(&quot;sCustom1&quot;).setText(sCustom1)
	End If
	
	If bCustom2FieldExists Then
		oEditorDialog.getControl(&quot;sCustom2&quot;).setText(sCustom2)
	End If
	
End Sub

&apos; ***************************
&apos;    Field modified events
&apos; ***************************

Sub TemplateChanged()
	sTemplate=oEditorDialog.getControl(&quot;sTemplate&quot;).getText()
	If oFileAccess.exists(sTemplatePath &amp; sTemplate &amp; &quot;.ly&quot;) Then ReadTemplate()

	If bUseDefaultCode Then
		sCode=&quot;&quot; &apos; UseDefaultCode() does not ask if sCode is empty
		UseDefaultCode()
	End If

	If bUseDefaultLineWidth Then UseDefaultLineWidth()
	If bUseDefaultStaffSize Then UseDefaultStaffSize()
	If bUseDefaultCustom1 Then UseDefaultCustom1()
	If bUseDefaultCustom2 Then UseDefaultCustom2()

	GreyOut()

End Sub


Sub CodeModified
	sCode = oEditorDialog.getControl(&quot;sCode&quot;).getText()
	bUseDefaultCode = False
	oEditorDialog.getControl(&quot;bUseDefaultCode&quot;).setState(BoolToCheckBoxState(False))
End Sub

Sub LineWidthModified
	sLineWidth = oEditorDialog.getControl(&quot;sLineWidth&quot;).getText()
	bUseDefaultLineWidth = False
	oEditorDialog.getControl(&quot;bUseDefaultLineWidth&quot;).setState(BoolToCheckBoxState(False))
End Sub

Sub StaffSizeModified
	sStaffSize = oEditorDialog.getControl(&quot;sStaffSize&quot;).getText()
	bUseDefaultStaffSize = False
	oEditorDialog.getControl(&quot;bUseDefaultStaffSize&quot;).setState(BoolToCheckBoxState(False))
End Sub

Sub Custom1Modified
	sCustom1 = oEditorDialog.getControl(&quot;sCustom1&quot;).getText()
	bUseDefaultCustom1 = False
	oEditorDialog.getControl(&quot;bUseDefaultCustom1&quot;).setState(BoolToCheckBoxState(False))
End Sub

Sub Custom2Modified
	sCustom2 = oEditorDialog.getControl(&quot;sCustom2&quot;).getText()
	bUseDefaultCustom2 = False
	oEditorDialog.getControl(&quot;bUseDefaultCustom2&quot;).setState(BoolToCheckBoxState(False))
End Sub


&apos; ****************************************
&apos;    Default Check Boxes Status Changed
&apos; ****************************************

Sub UseDefaultCode()
	Dim bYesDoItPlease As Boolean &apos; OOo Basic unfortunately does not support short circuit operators
	
	If CheckBoxStateToBool(oEditorDialog.getControl(&quot;bUseDefaultCode&quot;).getState()) Then

		bYesDoItPlease=False
		If sCode=&quot;&quot; Or sCode=sDefaultCode Then &apos; Dont&apos;s ask whether to overwrite the code if there is no code or the code is not changed
			bYesDoItPlease=True
		Else
			bYesDoItPlease= (MsgBox(&quot;Do you really want to reset your code to the default?&quot;, iMsgBox_YN, &quot;Are you sure?&quot;) = iAnswer_Yes )
		End If

		If bYesDoItPlease Then
			oEditorDialog.getControl(&quot;sCode&quot;).setText(sDefaultCode)
			oEditorDialog.getControl(&quot;bUseDefaultCode&quot;).setState(BoolToCheckBoxState(True))
			bUseDefaultCode = True
			sCode = sDefaultCode
		Else
			oEditorDialog.getControl(&quot;bUseDefaultCode&quot;).setState(BoolToCheckBoxState(False))
		End If

	Else
		bUseDefaultCode = False
	End If

End Sub


Sub UseDefaultLineWidth()
	If CheckBoxStateToBool(oEditorDialog.getControl(&quot;bUseDefaultLineWidth&quot;).getState()) Then
		oEditorDialog.getControl(&quot;sLineWidth&quot;).setText(sDefaultLineWidth)
		oEditorDialog.getControl(&quot;bUseDefaultLineWidth&quot;).setState(BoolToCheckBoxState(True))
		bUseDefaultLineWidth = True
		sLineWidth = sDefaultLineWidth
	Else
		bUseDefaultLineWidth = False
	End If
End Sub

Sub UseDefaultStaffSize
	If CheckBoxStateToBool(oEditorDialog.getControl(&quot;bUseDefaultStaffSize&quot;).getState()) Then
		oEditorDialog.getControl(&quot;sStaffSize&quot;).setText(sDefaultStaffSize)
		oEditorDialog.getControl(&quot;bUseDefaultStaffSize&quot;).setState(BoolToCheckBoxState(True))
		bUseDefaultStaffSize = True
		sStaffSize = sDefaultStaffSize
	Else
		bUseDefaultStaffSize = False
	End If
End Sub

Sub UseDefaultCustom1
	If CheckBoxStateToBool(oEditorDialog.getControl(&quot;bUseDefaultCustom1&quot;).getState()) Then
		oEditorDialog.getControl(&quot;sCustom1&quot;).setText(sDefaultCustom1)
		oEditorDialog.getControl(&quot;bUseDefaultCustom1&quot;).setState(BoolToCheckBoxState(True))
		bUseDefaultCustom1 = True
		sCustom1 = sDefaultCustom1
	Else
		bUseDefaultCustom1 = False
	End If
End Sub

Sub UseDefaultCustom2
	If CheckBoxStateToBool(oEditorDialog.getControl(&quot;bUseDefaultCustom2&quot;).getState()) Then
		oEditorDialog.getControl(&quot;sCustom2&quot;).setText(sDefaultCustom2)
		oEditorDialog.getControl(&quot;bUseDefaultCustom2&quot;).setState(BoolToCheckBoxState(True))
		bUseDefaultCustom2 = True
		sCustom2 = sDefaultCustom2
	Else
		bUseDefaultCustom2 = False
	End If
End Sub

</script:module>