<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="OOoLilyPond" script:language="StarBasic">&apos;	 OOoLilyPond - using LilyPond in OpenOffice.org
&apos;	
&apos;    Copyright (C) 2005  Geoffroy Piroux
&apos;    Copyright (C) 2009  Samuel Hartmann
&apos;
&apos;    This program is free software; you can redistribute it and/or modify
&apos;    it under the terms of the GNU General Public License version 3 as published by
&apos;    the Free Software Foundation.
&apos;    https://www.gnu.org/licenses/gpl.html
&apos;
&apos;    This program is distributed in the hope that it will be useful,
&apos;    but WITHOUT ANY WARRANTY; without even the implied warranty of
&apos;    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
&apos;    GNU General Public License for more details.
&apos;
&apos;    You should have received a copy of the GNU General Public License
&apos;    along with this program; if not, write to the Free Software
&apos;    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA


&apos; This module contains the main function OOoLilyPond().
&apos; It also contains some sub routines that deal with the
&apos; integration of LilyPond into OpenOffice.org


Option Explicit


Sub OOoLilyPondInit()

	Dim bWrongDocumentType As Boolean

	oMessages  = CreateUnoService (&quot;com.sun.star.beans.PropertyBag&quot;)

	PrivateConstants()
	DefaultMessageStrings()

	&apos; Create SimpleFileAccess Service (private object variable)
	oFileAccess = createUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
		
	&apos; Get the current document and controller
 	oDoc = ThisComponent
	oDocCtrl = oDoc.getCurrentController()

	&apos; Test if we are in OOoWriter or OOoImpress
	bWrongDocumentType = False
	If oDoc.getImplementationName() =  &quot;SwXTextDocument&quot; Then
		bInWriter = True
	Elseif oDoc.getImplementationName() = &quot;SdXImpressDocument&quot; Then
		bInWriter = False
	Else
	    bWrongDocumentType = True
		&apos; before displaying the error message, first care about config and translation stuff...
		Exit Sub
	End If

	&apos; Set configuration to &quot;factory default&quot;, is overwritten by settings from configuration file
	DefaultConfig()
	
	&apos; Create all Dialog objects
	DialogLibraries.LoadLibrary (constOLyLibraryName)

	&apos; Read configuration file
	If oFileAccess.exists( sConfigFile ) Then ReadConfig()
	
	&apos; Create Folder sLanguagePath and copy language files if it does not exist:
	If Not oFileAccess.isFolder(sLanguagePath) Then
		oFileAccess.createFolder(sLanguagePath)
		&apos; Display a message: Folder for language files created
		MsgBox (oMessages.getPropertyValue (&quot;sMsgLanguageFolderCreated1&quot;) &amp; ConvertFromURL(sLanguagePath) &amp; oMessages.getPropertyValue (&quot;sMsgLanguageFolderCreated2&quot;), iMsgBox_I, oMessages.getPropertyValue (&quot;sCaptionInfo&quot;))
		CopyLanguageFiles()
	End If
	
	&apos; read translation strings from language file
	ReadLanguageFile()
		
	If bWrongDocumentType Then
		&apos; Msgbox(oDoc.getImplementationName() &amp; &quot;: document type not supported by &quot; &amp; constOLyLibraryName, 0, &quot;Error&quot;)
		Msgbox (oMessages.getPropertyValue (&quot;sMsgDocTypeNotSupported1&quot;) &amp; oDoc.getImplementationName() &amp; oMessages.getPropertyValue (&quot;sMsgDocTypeNotSupported2&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
	End If

	&apos; Copy Templates If needed
	If sLilyPondVersionMajor=&quot;&quot; Then &apos; LilyPond has never been (successfully) called yet
		If LilyPondVersion() Then
			CopyTemplates()
			SaveConfig()
		Else
			&apos; MsgBox(&quot;LilyPond can not be found. Please check whether LilyPond is properly installed&quot; &amp; Chr(10) _
            &apos;                   &amp; &quot;and the specified path to the LilyPond executable is correct.&quot;, iMsgBox_E)
            MsgBox (oMessages.getPropertyValue (&quot;sMsgLilypondNotFound&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
		End If
	Else &apos; LilyPond has already once been called successfully
		If Not oFileAccess.isFolder(sTemplatePath) Then CopyTemplates() &apos; For some reason the templates are not there
	End If

	&apos; Initialize Anchor and Wrap settings, we already know that ;-)
	If bInWriter Then
		sTemplate = sWriterDefaultTemplate
		iAnchor = iWriterDefaultAnchor
		iWrap = iWriterDefaultWrap
	Else
		sTemplate = sImpressDefaultTemplate
	End If
	
	bSaveAsSeparateImages = bNewObjectsAsSeparateImages
	bTemplateSaved = False
	
	&apos; Path for temp. LY file sent to external editor: 
	sTempLyFilePath = &quot;&quot;
	If bTempLyFileInDocFolder Then
		sTempLyFilePath = GetDocPath ()	&apos; empty string if unavailable
	End If 	
	If sTempLyFilePath = &quot;&quot; Then 
		sTempLyFilePath = sTmpPath
	End If
	bTempLyFileCreated = False

	&apos; By default use default values ;-)
	&apos; Will be overwritten if values are read from existing object
	bUseDefaultCode = True
	bUseDefaultLineWidth = True
	bUseDefaultStaffSize = True
	bUseDefaultCustom1 = True
	bUseDefaultCustom2 = True
	bUseDefaultCustom3 = True
	bUseDefaultCustom4 = True
End Sub


Sub OOoLilyPond()
	&apos; This is the main function
	&apos; It initializes OOoLilyPond and opens the OOoLilyPond Editor dialog

	OOoLilyPondInit()
	If Not ReadSelectionObject () Then Exit Sub   &apos; create Cursor and read Attributes if Object is selected
	&apos; Now we know which template to use
	ReadTemplate (True)
	&apos; Open the dialog box
	EditorDialog()
End Sub


Sub OOoLilyPondBatch()
	&apos; This is the main function for batch processing
	&apos; It initializes OOoLilyPond and opens the Batch dialog.

	Dim sConditionFrameLabel As String
	Dim iNumPos As Integer
	Dim sURL As String
	Dim bHasURL As Boolean

	OOoLilyPondInit ()
	If Not bInWriter Then Exit Sub
	
	sURL = oDoc.getURL()  &apos; see GetRelativeIncludeStatement ()
	bHasURL = (Not IsNull (sURL)) And Len (sURL) &gt; 0
	
	oBatchDialog = createUnoDialog (DialogLibraries.GetByName (constOLyLibraryName).GetByName(&quot;GUI_Batch&quot;))
	
	oBatchDialog.getControl(&quot;bAsk&quot;).setState (BoolToCheckBoxState (bAskForEachObjectDefault))
	oBatchDialog.getControl(&quot;CreateBackup&quot;).setEnable (bHasURL)
	If bHasURL Then
		oBatchDialog.getControl(&quot;CreateBackup&quot;).setState (BoolToCheckBoxState (bCreateBackupDefault))
	Else
		oBatchDialog.getControl(&quot;CreateBackup&quot;).setState (BoolToCheckBoxState (False))
	End If
	oBatchDialog.getControl(&quot;bKeepCrop&quot;).setState (BoolToCheckBoxState (bBatchKeepCropDefault))
	ReadDialogStringsFromVar (oBatchDialog, sBatchDialogStrings, &quot;&quot;)
	ReadDialogStringsFromVar (oBatchDialog, sBatchDialogRuleSetStrings, &quot;_A&quot;)
	ReadDialogStringsFromVar (oBatchDialog, sBatchDialogRuleSetStrings, &quot;_B&quot;)
	
	&apos; Add numbers in frame&apos;s captions:
	sConditionFrameLabel = oBatchDialog.getModel().getByName (&quot;ConditionFrame_A&quot;).Label
	iNumPos = InStr (sConditionFrameLabel, &quot;#&quot;)
	If iNumPos &gt; 0 Then
		Mid (sConditionFrameLabel, iNumPos, 1, &quot;1&quot;)
		oBatchDialog.getModel().getByName (&quot;ConditionFrame_A&quot;).Label = sConditionFrameLabel
		Mid (sConditionFrameLabel, iNumPos, 1, &quot;2&quot;)
		oBatchDialog.getModel().getByName (&quot;ConditionFrame_B&quot;).Label = sConditionFrameLabel
	End If
	
	oBatchDialog.Execute()

End Sub


Sub EraseImageSiblings()
	&apos; If an OLy object consists of multiple separate images, each of them has all attributes like OOoLilyPondCode etc.
	&apos; In addition, they share the same Identifier (timestamp) but have individual ImageNumbers to distinguish between them.
	&apos; When re-compiling one of them (which will produce a whole new set of images), all the other images belonging to the 
	&apos; same object become obsolete.
	&apos; This procedure will erase all of them except the one currently selected.
	
	Dim oDrawPage As Object
	Dim oCurrentObject As Object
	Dim iCount As Integer
	Dim i As Integer
	
	Dim oGraphic As Object
	Dim oShape As Object
	Dim oGraphicObjects ()
	
	Dim sOwnIdentifier As String
	Dim sOwnImageNum As String
	
	Dim oTextCursor As Object
	Dim sTempStr As String
	Dim iStrLen As Integer
	Dim sCharNum As String
	Dim iCharNum As Integer
	Dim iIntendedLength As Integer
	Dim sIntendedCharNum As String
	
	Dim sTempIdentifier As String
	Dim sTempImageNum As String

	Select Case oCurrentGraphicObject.getImplementationName()  &apos; global variable
	Case &quot;SwXTextRanges&quot; &apos; Nothing or normal text selection in Writer
		Exit Sub
		&apos; No object selected, nothing to do
	Case &quot;com.sun.star.drawing.SvxShapeCollection&quot;  &apos; inserted into Writer via Clipboard OR inserted into Draw/Impress
		oShape = oCurrentGraphicObject.getByIndex(0)
	Case &quot;SwXTextGraphicObject&quot; &apos; Graphic is selected in Writer
		oShape = oCurrentGraphicObject
	End Select
	
	If sOSType = &quot;Windows&quot; Then
		iIntendedLength = 2
		sIntendedCharNum = &quot;13&quot;
	Else	&apos; Unix or Mac
		iIntendedLength = 1
		sIntendedCharNum = &quot;10&quot;
	End If
	
	oDrawPage = oDoc.DrawPage
	iCount = oDrawPage.Count
	oGraphicObjects = DimArray (iCount) 
	For i = 0 to iCount - 1
		oGraphicObjects (i) = oDrawPage.getByIndex(i)
	next i
	
	sOwnIdentifier = GetObjectIdentifier (oShape)
	sOwnImageNum   = GetObjectImageNum   (oShape)

	If sOwnIdentifier &lt;&gt; &quot;&quot; and sOwnImageNum &lt;&gt; &quot;&quot; Then
		For i = 0 to iCount - 1
			oCurrentObject = oGraphicObjects (i)
			sTempIdentifier = GetObjectIdentifier (oCurrentObject)
			sTempImageNum   = GetObjectImageNum   (oCurrentObject)
			If IsOLyObject (oCurrentObject) Then
				If GetObjectIdentifier (oCurrentObject) = sOwnIdentifier And GetObjectImageNum (oCurrentObject) &lt;&gt; sOwnImageNum Then
					If oCurrentObject.SupportsService(&quot;com.sun.star.drawing.Shape&quot;) Or oCurrentObject.SupportsService(&quot;com.sun.star.text.TextGraphicObject&quot;) Then
						oTextCursor = oCurrentObject.getAnchor().getText().createTextCursorByRange (oCurrentObject.getAnchor())
						oCurrentObject.Dispose	&apos; erase image
						If Not oTextCursor.goLeft (1, True) Then   &apos; We are at the beginning of a document or table cell or...
							oTextCursor.goRight (1, True)
						End If
						sTempStr = oTextCursor.getString ()
						iStrLen = Len (sTempStr)
						If Len (sTempStr) = iIntendedLength Then
							sCharNum = Asc (sTempStr)
							If sCharNum = sIntendedCharNum Then oTextCursor.setString (&quot;&quot;)  &apos; erase &quot;new paragraph&quot; control char
						End If
        			End If
				Else
					&apos; anything?
				End If
			End If
		next i
	End If
	oDocCtrl.select (oShape)
End Sub


Function ReadGraphicObject (oGraphicObject As Object) As Boolean

	Dim oShape As Object

	bShapeIsSelected = False  &apos;global variable, used in InsertOOoLilyPondObjectViaClipboard ()
	Select Case oGraphicObject.getImplementationName()
	Case &quot;com.sun.star.drawing.SvxShapeCollection&quot; 	&apos; inserted into Writer via Clipboard OR inserted into Draw/Impress
		oShape = oGraphicObject.getByIndex(0)
		If bInWriter Then &apos; OLy &lt; 0.4 in Writer
			&apos; oCursor = oDoc.Text.createTextCursorByRange(oSelection(0).getAnchor())
			If Not ReadAttributes (oShape) Then  &apos;Read the OLy fields from the Object Attributes
				ReadGraphicObject = False
				Exit Function
			End If
			iAnchorPageNo = oShape.AnchorPageNo
		Else &apos; OLy object in Draw / Impress
			If Not ReadAttributes (oShape) Then  &apos;Read the OLy fields from the Object Attributes
				ReadGraphicObject = False
				Exit Function
			End If
		End If
		oShapePosition = oShape.position()  &apos;global variable, used in InsertOOoLilyPondObjectViaClipboard ()
		bShapeIsSelected = True
				
	Case &quot;SwXTextGraphicObject&quot; &apos; Graphic is selected in Writer
		If Not ReadAttributes (oGraphicObject) Then &apos; Read the OLy fields from the Object Attributes
			ReadGraphicObject = False
			Exit Function
		End If
		Dim oTempPoint As New com.sun.star.awt.Point
		oTempPoint.X = oGraphicObject.HoriOrientPosition
		oTempPoint.Y = oGraphicObject.VertOrientPosition
		oShapePosition = oTempPoint
		iAnchorPageNo = oGraphicObject.AnchorPageNo
		bShapeIsSelected = True
		
	Case &quot;SwXTextRanges&quot; &apos; Nothing or normal text selection in Writer
		&apos; oCursor = oDoc.Text.createTextCursorByRange(oGraphicObject(0))
			
	Case Else
		&apos; Msgbox (&quot;The selected object is not an OLy object ...&quot;, 0, &quot;Error&quot;)
		Msgbox (oMessages.getPropertyValue (&quot;sMsgNoOlyObject&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
		ReadGraphicObject = False
		Exit Function
			
	End Select
	ReadGraphicObject = True
End Function


Function ReadSelectionObject () As Boolean
	&apos; create Cursor and read Attributes if Object is selected
	
	On Error Goto ErrorHandler

	If Not IsEmpty (oDocCtrl.getSelection) Then &apos; Is only empty in Impress or Draw when nothing is selected
		oCurrentGraphicObject = oDocCtrl.getSelection
		ReadSelectionObject = ReadGraphicObject (oCurrentGraphicObject)
	End If
	ReadSelectionObject = True
	
	Exit Function
	
	ErrorHandler:
	Msgbox (oMessages.getPropertyValue (&quot;sMsgNoOlyObjectsHere&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
	Exit Function
End Function


Sub ConvertSeparateImageFiles ()

	Dim sDirEntry As String
	Dim sCommand As String
	Dim sConvTmpPath As String

	If sFormat &lt;&gt; &quot;pdf to svg&quot; Then Exit Sub

	sConvTmpPath = ConvertFromURL(sTmpPath)
	If (sOSType = &quot;Unix&quot;) Or (sOSType = &quot;Mac&quot;) Then
		sCommand = &quot;cd &quot; &amp; Chr(34) &amp; sConvTmpPath &amp; Chr(34)
	ElseIf sOSType = &quot;Windows&quot; Then
		sCommand = &quot;cd /d &quot; &amp; Chr(34) &amp; sConvTmpPath &amp; Chr(34) &amp; Chr(13) &amp; Chr(10) 	
	End If
	
	sDirEntry = Dir (sTmpPath &amp; constOLyFileName &amp; &quot;-*.pdf&quot;)
	Do While sDirEntry &lt;&gt; &quot;&quot;
		If (sOSType = &quot;Unix&quot;) Or (sOSType = &quot;Mac&quot;) Then
			sCommand = sCommand &amp; &quot;; &quot; 
		ElseIf sOSType = &quot;Windows&quot; Then
			sCommand = sCommand &amp; Chr(13) &amp; Chr(10)
		End If
		sCommand = sCommand &amp; sPdfToSvgPrologue &amp; &quot; &quot; &amp; Chr(34) &amp; sConvTmpPath &amp; sDirEntry &amp; Chr(34) 
		If bUseSecondSvgParam Then
			sCommand = sCommand &amp; &quot; &quot; &amp; Chr(34) &amp; sConvTmpPath &amp; Left (sDirEntry, Len (sDirEntry) - 3) &amp; &quot;svg&quot; &amp; Chr(34)
		End If
		If Len (sPdfToSvgEpilogue) &gt; 0 Then
			sCommand = sCommand &amp; &quot; &quot; &amp; sPdfToSvgEpilogue
		End If
	sDirEntry = Dir
	Loop
	
	If (sOSType = &quot;Unix&quot;) Or (sOSType = &quot;Mac&quot;) Then
		BashCommand (sCommand)
	ElseIf sOSType = &quot;Windows&quot; Then
		sCommand = sCommand &amp; Chr(13) &amp; Chr(10)
		WindowsCommand (sCommand)
	End If

End Sub


Function GetCursorForWriter (oGraphicObject As Object) As Object

	Dim oTempCursor As Object
	Dim oViewCursor As Object
	Dim oTempAnchor
	Dim oTempText
	
	If oGraphicObject.getImplementationName() = &quot;SwXTextRanges&quot; Then &apos; Nothing or normal text selection in Writer
		oTempCursor = oGraphicObject(0).getText().createTextCursorByRange (oGraphicObject(0))
	Else		&apos; an object is selected
		oTempAnchor = oGraphicObject(0).getAnchor()
		If IsNull (oTempAnchor) Then	&apos; happens when AnchorType is AT_PAGE
			oViewCursor = oDocCtrl.getViewCursor()
			If iAnchorPageNo &gt; 0 Then 
				oViewCursor.jumpToPage (iAnchorPageNo)
			End If
			oTempCursor = oDoc.Text.createTextCursorByRange (oViewCursor)
		Else
			oTempText = oTempAnchor.getText()
			oTempCursor = oTempText.createTextCursorByRange (oTempAnchor)
		End If
	EndIf

	GetCursorForWriter = oTempCursor

End Function


Sub Make (bSilent As Boolean)  &apos; silent: without displaying errors; oEditorDialog doesn&apos;t exist (batch processing)
	&apos; Calls the subroutines that generate the image and
	&apos; insert the image into the document.
	Dim bNoFileCreated As Boolean
	&apos; Dim bNoFirstFileCreated As Boolean
	Dim oViewCursor As Object
	Dim oSelection As Object
	&apos; Dim oAnchor As Object		&apos; not in use
	
	Dim sIdentifier As String
	Dim sImageNum As String
	Dim iImageNum As Integer
	Dim iFirstImageNum As Integer
	Dim sFileNameAddition As String
	Dim sLilyPondOutput As String

	bNoFileCreated = False
	&apos; bNoFirstFileCreated = False
	&apos; Test if there is LilyPond code
	If sCode = &quot;&quot; then 
		&apos; Msgbox (&quot;Enter LilyPond code...&quot;, iMsgBox_E, &quot;Error&quot;)
		Msgbox (oMessages.getPropertyValue (&quot;sMsgEnterLyCode&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
		If iAskDialogReturnValue = 4 Then iAskDialogReturnValue = 3
		exit sub
	end if

	If Not ApplyTemplate() Then 
		Exit Sub
	End If

	CleanUp()

	If Not WriteLyFile (sTmpPath &amp; constOLyFileName &amp; &quot;.ly&quot;) Then 
		Exit Sub
	End If

	If Not CallLilyPond() Then 
		Exit Sub
	End If
	
	
	

  	ParseOutput(sTmpPath &amp; constOLyFileName &amp; &quot;.out&quot;)
  	
  	If sFormat = &quot;svg [-dcrop]&quot; Then
  		sFileNameAddition = &quot;.cropped&quot;
  	Else
  		sFileNameAddition = &quot;&quot;
  	End If
  	
	&apos;If there is no eps output
 	If sFormat = &quot;eps&quot; And (Not oFileAccess.exists(sTmpPath &amp; constOLyFileName &amp; &quot;.eps&quot;)) Then
 		&apos; MsgBox(&quot;No eps output is found&quot;, 0, &quot;Error&quot;)
 		MsgBox (oMessages.getPropertyValue (&quot;sMsgNoEpsOutputFound&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
 		bNoFileCreated = True
 	End If
 
	&apos;If there is no svg output
 	If (sFormat = &quot;svg&quot; Or sFormat = &quot;svg [-dcrop]&quot;) And (Not oFileAccess.exists(sTmpPath &amp; constOLyFileName &amp; sFileNameAddition &amp; &quot;.svg&quot;)) Then
 		&apos; MsgBox(&quot;No svg output is found&quot;, 0, &quot;Error&quot;)
 		MsgBox (oMessages.getPropertyValue (&quot;sMsgNoSvgOutputFound&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
 		bNoFileCreated = True
 	End If
 	
	&apos;If there is no png output
 	If sFormat = &quot;png&quot; And (Not oFileAccess.exists(sTmpPath &amp; constOLyFileName &amp; &quot;.png&quot;)) Then
 		&apos; MsgBox(&quot;No png output is found&quot;, 0, &quot;Error&quot;)
 		MsgBox (oMessages.getPropertyValue (&quot;sMsgNoPngOutputFound&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
 		bNoFileCreated = True
 	End If

	&apos;If there is no pdf output
 	If sFormat = &quot;pdf to svg&quot; Then
 		If Not oFileAccess.exists(sTmpPath &amp; constOLyFileName &amp; &quot;.svg&quot;) Then
 			bNoFileCreated = True
			If Not oFileAccess.exists(sTmpPath &amp; constOLyFileName &amp; &quot;.pdf&quot;) Then	&apos; no PDF created
	 			&apos; MsgBox(&quot;No pdf output is found&quot;, 0, &quot;Error&quot;)
	 			MsgBox (oMessages.getPropertyValue (&quot;sMsgNoPdfOutputFound&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
	 		Else																	&apos; PDF created
				If oFileAccess.exists(sTmpPath &amp; &quot;PdfToSvg-cannot_execute&quot;) Then		&apos; PdfToSvg execution error
					If StringFromFile (sLilyPondOutput, sTmpPath &amp; constOLyFileName &amp; &quot;-PdfToSvg.out&quot;) Then  &apos; can happen under Linux if pdf2svg can&apos;t find a pdf file
						MsgBox (oMessages.getPropertyValue (&quot;sMsgPdfToSvgConversionFailed&quot;) &amp; Chr(10) &amp; Chr(10) &amp; sLilyPondOutput, iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
					Else
						MsgBox (oMessages.getPropertyValue (&quot;sMsgPdfToSvgCannotExecute&quot;) &amp; Chr(10) &amp; Chr(10) &amp; sPdfToSvgPrologue &amp; ConvertFromURL(sTmpPath) &amp; constOLyFileName &amp; &quot;.pdf&quot; &amp; sPdfToSvgEpilogue, iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
					End If
				Else																	&apos; No PdfToSvg execution error
					If StringFromFile (sLilyPondOutput, sTmpPath &amp; constOLyFileName &amp; &quot;-PdfToSvg.out&quot;) Then
						MsgBox (oMessages.getPropertyValue (&quot;sMsgPdfToSvgConversionFailed&quot;) &amp; Chr(10) &amp; Chr(10) &amp; sLilyPondOutput, iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
					Else
						MsgBox (oMessages.getPropertyValue (&quot;sMsgPdfToSvgConversionFailed&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
					End If
				End If
 			End If
 		End If
 	End If
 	
 	If Not bSilent Then
		&apos; remove any error message that still might be displayed:
		oEditorDialog.getControl (&quot;sErrMsg&quot;).setText (&quot;&quot;)
		oEditorDialog.getControl (&quot;sErrMsg&quot;).Visible = False
	End If
	
	If bNoFileCreated Then
		If iAskDialogReturnValue = 4 Then iAskDialogReturnValue = 3
 		If iNErr &gt;= 1 And Not bIgnoreWarnings And Not bSilent Then   &apos;If there were errors or warnings
 	 		iErrNum = 1
  			DisplayError()
 		End If
  		Exit Sub
 	End If
 	
	If bInWriter Then	&apos; We are in Writer...
	
		oCurrentCursor = GetCursorForWriter (oCurrentGraphicObject)
		
		If bSaveAsSeparateImages Then
			ConvertSeparateImageFiles ()
			&apos; abort if no OOoLilyPond-1 image file exists
			If Not oFileAccess.exists(sTmpPath &amp; constOLyFileName &amp; &quot;-1.&quot; &amp; sExtension) Then
 				&apos; MsgBox(&quot;No eps output is found&quot;, 0, &quot;Error&quot;)
 				MsgBox (oMessages.getPropertyValue (&quot;sMsgNoFirstFileFound&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
 				&apos; bNoFirstFileCreated = True
 				If iAskDialogReturnValue = 4 Then iAskDialogReturnValue = 3
 				If iNErr &gt;= 1 And Not bIgnoreWarnings And Not bSilent Then   &apos;If there were errors or warnings
 			 		iErrNum = 1
  					DisplayError()
 				End If
 				Exit Sub
 			End If
 			If iFrom &lt; 2 Then
 				iFirstImageNum = 1
 			Else
 				iFirstImageNum = iFrom
 			End If
			&apos; same with # iFirstImageNum
 			If Not oFileAccess.exists(sTmpPath &amp; constOLyFileName &amp; &quot;-&quot; &amp; CStr (iFirstImageNum) &amp; &quot;.&quot; &amp; sExtension) Then
 				&apos; MsgBox: not enough images to start with iFirstImageNum
 				MsgBox (oMessages.getPropertyValue (&quot;sMsgNotEnoughImages1&quot;) &amp; CStr (iFirstImageNum) &amp; oMessages.getPropertyValue (&quot;sMsgNotEnoughImages2&quot;), _ 
 				iMsgBox_O + iMsgBox_S, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
 				&apos; (replace by maching error message...)
 				&apos; bNoFirstFileCreated = True
 				If iAskDialogReturnValue = 4 Then iAskDialogReturnValue = 3
 				If iNErr &gt;= 1 And Not bIgnoreWarnings And Not bSilent Then   &apos;If there were errors or warnings
 			 		iErrNum = 1
  					DisplayError()
 				End If
 				Exit Sub
 			End If
		End If

		If bHasSeparateImages Then
			EraseImageSiblings ()
		End If
		
		If bSaveAsSeparateImages Then

			sIdentifier = TimeStamp ()
			iImageNum = iFirstImageNum
			sImageNum = &quot;-&quot; &amp; CStr (iImageNum)

			Do While oFileAccess.exists (sTmpPath &amp; constOLyFileName &amp; sImageNum &amp; &quot;.&quot; &amp; sExtension) And ((iImageNum &lt;= iTo) Or (iTo = 0))
				If bWriterInsertViaClipboard Then
					If iImageNum = iFirstImageNum Then
						InsertOOoLilyPondObjectViaClipboard (sIdentifier, sImageNum, sFileNameAddition, true)
					Else
						oCurrentCursor.goRight (0, false)
						oCurrentCursor.getText.insertControlCharacter (oCurrentCursor.getStart(), com.sun.star.text.ControlCharacter.PARAGRAPH_BREAK, False)
						Wait (100)
						InsertOOoLilyPondObjectViaClipboard (sIdentifier, sImageNum, sFileNameAddition, false)
					End If
				Else &apos; insert... Direct
					If iImageNum = iFirstImageNum Then
						InsertOOoLilyPondObject (sIdentifier, sImageNum, sFileNameAddition, true)
					Else
						oCurrentCursor.getText.insertControlCharacter (oCurrentCursor.getStart(), com.sun.star.text.ControlCharacter.PARAGRAPH_BREAK, False)
						InsertOOoLilyPondObject (sIdentifier, sImageNum, sFileNameAddition, false)
					End If
				End If
				oCurrentCursor.goRight (0, false)
				iImageNum = iImageNum + 1
				sImageNum = &quot;-&quot; &amp; CStr (iImageNum)
			Loop
		Else	&apos; not bSaveAsSeparateImages
			If bWriterInsertViaClipboard Then
				InsertOOoLilyPondObjectViaClipboard (&quot;&quot;, &quot;&quot;, sFileNameAddition, true)
			Else
				InsertOOoLilyPondObject (&quot;&quot;, &quot;&quot;, sFileNameAddition, true)
			End If
		End If
	Else				&apos; We are in Impress or Draw...
		If bImpressInsertViaClipboard Then
			InsertOOoLilyPondObjectViaClipboard (&quot;&quot;, &quot;&quot;, sFileNameAddition, true)
		Else
			InsertOOoLilyPondObject (&quot;&quot;, &quot;&quot;, sFileNameAddition, true)
		End If
	End If
	
	If Not bKeepTempFiles Then CleanUpAfterwards()
 	
 	&apos;If there were errors or warnings
 	If iNErr &gt;= 1 And Not bIgnoreWarnings And Not bSilent Then
 		ReadSelectionObject ()
 	 	iErrNum = 1
  		DisplayError()
  		Exit Sub
 	End If

	&apos; Close the dialog
	If Not bSilent Then oEditorDialog.endExecute()
	
	Exit Sub
	
	ErrorHandler:
		Select Case Err
		Case 1	&apos; 	&quot;End of content node doesn&apos;t have the proper start node&quot;
			Msgbox (Error &amp; Chr(10) &amp; Chr(10) &amp; oMessages.getPropertyValue (&quot;MsgNoStartNode&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
				&apos; MsgNoStartNode
		Case Else
			Msgbox (Error, iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
		End Select
		If iAskDialogReturnValue = 4 Then iAskDialogReturnValue = 3
	Exit Sub
	
End Sub


Sub InsertAttribute(oGraphic As Object, sName, sValue As String)
	&apos; Add a user defined attribute to the image.
	
	Dim oAttributes, oLilyPondAttribute As Object
	oAttributes = oGraphic.UserDefinedAttributes
	oLilyPondAttribute = createUnoStruct( &quot;com.sun.star.xml.AttributeData&quot; )
	oLilyPondAttribute.Type = &quot;CDATA&quot;      		
	oLilyPondAttribute.Value = sValue
	If oAttributes.hasByName(sName) Then
		oAttributes.replaceByName(sName, oLilyPondAttribute )
	Else
		oAttributes.insertByName(sName, oLilyPondAttribute )
	End If
	oGraphic.UserDefinedAttributes = oAttributes
End Sub


Sub RemoveAttribute (oGraphic As Object, sName As String)
	&apos; Add a user defined attribute to the image.

	Dim oAttributes As Object
	oAttributes = oGraphic.UserDefinedAttributes
	If oAttributes.hasByName (sName) Then
		oAttributes.removeByName(sName)
	End If
	oGraphic.UserDefinedAttributes = oAttributes
End Sub


Sub AttachAttributes (oGraphic As Object, sIdentifier As String, sImageNum As String)

	InsertAttribute(oGraphic, &quot;OOoLilyPondCode&quot;, sCode)
	InsertAttribute(oGraphic, &quot;OOoLilyPondTemplate&quot;, sTemplate)
	InsertAttribute(oGraphic, &quot;OOoLilyPondLineWidth&quot;, sLineWidth)
	InsertAttribute(oGraphic, &quot;OOoLilyPondStaffSize&quot;, sStaffSize)
	InsertAttribute(oGraphic, &quot;OOoLilyPondCustom1&quot;, sCustom1)
	InsertAttribute(oGraphic, &quot;OOoLilyPondCustom2&quot;, sCustom2)
	InsertAttribute(oGraphic, &quot;OOoLilyPondCustom3&quot;, sCustom3)
	InsertAttribute(oGraphic, &quot;OOoLilyPondCustom4&quot;, sCustom4)

	InsertAttribute(oGraphic, &quot;OOoLilyPondUseDefaultCode&quot;, BoolToString(bUseDefaultCode))
	InsertAttribute(oGraphic, &quot;OOoLilyPondUseDefaultLineWidth&quot;, BoolToString(bUseDefaultLineWidth))
	InsertAttribute(oGraphic, &quot;OOoLilyPondUseDefaultStaffSize&quot;, BoolToString(bUseDefaultStaffSize))
	InsertAttribute(oGraphic, &quot;OOoLilyPondUseDefaultCustom1&quot;, BoolToString(bUseDefaultCustom1))
	InsertAttribute(oGraphic, &quot;OOoLilyPondUseDefaultCustom2&quot;, BoolToString(bUseDefaultCustom2))
	InsertAttribute(oGraphic, &quot;OOoLilyPondUseDefaultCustom3&quot;, BoolToString(bUseDefaultCustom3))
	InsertAttribute(oGraphic, &quot;OOoLilyPondUseDefaultCustom4&quot;, BoolToString(bUseDefaultCustom4))
	InsertAttribute(oGraphic, &quot;OOoLilyPondOption1Value&quot;, BoolToString(bOption1))
	InsertAttribute(oGraphic, &quot;OOoLilyPondOption2Value&quot;, BoolToString(bOption2))
	InsertAttribute(oGraphic, &quot;OOoLilyPondOption3Value&quot;, BoolToString(bOption3))
	InsertAttribute(oGraphic, &quot;OOoLilyPondOption4Value&quot;, BoolToString(bOption4))
	If bIncludeTemplate Then 
		InsertAttribute (oGraphic, &quot;OOoLilyPondTemplateCode&quot;, sTemplateCode)
	Else
		RemoveAttribute (oGraphic, &quot;OOoLilyPondTemplateCode&quot;)
	End If
	If bSaveAsSeparateImages And bInWriter Then 
		InsertAttribute (oGraphic, &quot;OOoLilyPondIdentifier&quot;, sIdentifier)
		InsertAttribute (oGraphic, &quot;OOoLilyPondImageNum&quot;, sImageNum)
	Else
		RemoveAttribute (oGraphic, &quot;OOoLilyPondIdentifier&quot;)
		RemoveAttribute (oGraphic, &quot;OOoLilyPondImageNum&quot;)
	End If
	
	If bInWriter And iFrom &gt; 0 Then 
		InsertAttribute (oGraphic, &quot;OOoLilyPondFirstImage&quot;, iFrom)
	Else
		RemoveAttribute (oGraphic, &quot;OOoLilyPondFirstImage&quot;)
	End If

	If bInWriter And iTo &gt; 0 Then 
		InsertAttribute (oGraphic, &quot;OOoLilyPondLastImage&quot;, iTo)
	Else
		RemoveAttribute (oGraphic, &quot;OOoLilyPondLastImage&quot;)
	End If
End Sub


Sub InsertOOoLilyPondObjectViaClipboard (sIdentifier As String, sNumber As String, sAddition As String, bFirstCall As Boolean)
	&apos; Dim oDoc, oDocCtrl
	Dim oDispatcher As Object
	Dim oAttributes As Object
	Dim oViewCursor As Object
	Dim oGraphic As Object
	Dim oLilyPondAttribute As Object
	Dim oText as Object
		
	oDispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)

	if bInWriter then

		&apos;ToDo: Don&apos;t use the Dispatcher
		if bShapeIsSelected And bFirstCall then
			&apos; shot into the dark:
			&apos; make sure the object is REALLY selected...
			oDocCtrl.select (oCurrentGraphicObject)
			&apos;Remove the old image...
			oDispatcher.executeDispatch( oDocCtrl.Frame, &quot;.uno:Cut&quot;, &quot;&quot;, 0, Array())
		end if
		&apos;Get the cursor position...
		oViewCursor =  oDocCtrl.ViewCursor
		oText = oDoc.Text
		
		&apos;Import the new image to the clipboard and paste it...
   		ImportGraphicIntoClipboard (ConvertToURL (sTmpPath &amp; constOLyFileName &amp; sNumber &amp; sAddition &amp; &quot;.&quot; &amp; sExtension))	
		oDispatcher.executeDispatch (oDocCtrl.Frame, &quot;.uno:Paste&quot;, &quot;&quot;, 0, Array())
		&apos; Wait (100)	&apos; doesn&apos;t help against strange LO behavior  :(
	  	oGraphic = oDocCtrl.getSelection().GetByIndex(0)
	  		  	
	  	If oGraphic.getImplementationName() = &quot;SwXTextRange&quot; Then
	  		&apos; Now this should never happen again...
	  		Msgbox (oMessages.getPropertyValue (&quot;sMsgPasteError&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
	  		Exit Sub
	  	End If

		&apos; set image properties
		oGraphic.AnchorType = iAnchor
		&apos; Now the following should never ever happen anymore: 
		&apos; -------------------------------------------------------------------------------------------------------
		&apos; If you find yourself here with a BASIC error message like &quot;Property or Method not found: AnchorType&quot;,	 |
		&apos; you&apos;ve probably changed from &quot;Insert Image - Direct&quot; to &quot;Insert Image - Via Clipboard&quot;.				 |
		&apos; This is generally not recommended anymore as LibreOffice does unforeseeable things here.               |
		&apos;                                                                                                        |
		&apos; Possible workaround:																					 |
		&apos; First, return to your document and close the OOoLilyPond window to stop macro execution.				 |
		&apos; Undo you last action in LibreOffice (&quot;Insert Clipboard&quot;) to make your OOoLilyPond object usable again. |
		&apos; De-select it and select it again. 																	 |
		&apos; Now you should be able to call OOoLilyPond again without encountering this error. 					 |
		&apos; -------------------------------------------------------------------------------------------------------
				
		oGraphic.Surround = iWrap			

		&apos; To do:
		&apos; The staff size is limitied to 19.5 cm
		&apos; This is because the graphic is first loaded into a new draw document of format A4 portrait
		oGraphic.TopMargin = 0
		oGraphic.BottomMargin = 0
		oGraphic.VertOrient = 0
		oGraphic.HoriOrient = com.sun.star.text.HoriOrientation.NONE
		if iAnchor = com.sun.star.text.TextContentAnchorType.AT_CHARACTER Then
			oGraphic.HoriOrientRelation = com.sun.star.text.RelOrientation.CHAR
			oGraphic.VertOrientRelation = com.sun.star.text.RelOrientation.CHAR
		Else
			oGraphic.HoriOrientRelation = com.sun.star.text.RelOrientation.PRINT_AREA
			oGraphic.HoriOrientRelation = com.sun.star.text.RelOrientation.PRINT_AREA
		End If
		
		if bShapeIsSelected And (iAnchor = iOriginalAnchor) And Not IsNull (oShapePosition) Then oGraphic.position = oShapePosition

		&apos; if (not bShapeIsSelected) or (not bFirstCall) then
			&apos; Show cursor...
			&apos; To do: don&apos;t use dispatcher
			&apos; oDispatcher.executeDispatch (oDocCtrl.Frame, &quot;.uno:Escape&quot;, &quot;&quot;, 0, Array())
			&apos; If Not IsNull (oCurrentCursor) Then
				&apos; de-select object to avoid trouble when re-launching OLy again:
				&apos; oCurrentCursor.goRight (0,false)
				&apos; oViewCursor.gotoRange (oCurrentCursor, False)
			&apos; End If
		&apos; end if

	else &apos;We are in Impress
		
		if  bShapeIsSelected then
			&apos; Remove the old image...
			oDispatcher.executeDispatch(oDocCtrl.Frame,&quot;.uno:Cut&quot;,&quot;&quot;, 0, Array() )
		end if
		
		&apos; Import the new image to the clipboard and paste it...
		&apos; To do: don&apos;t use dispatcher
   		ImportGraphicIntoClipboard(ConvertToURL( sTmpPath &amp; constOLyFileName &amp; sAddition &amp; &quot;.&quot; &amp; sExtension))	
		oDispatcher.executeDispatch( oDocCtrl.Frame, &quot;.uno:Paste&quot;, &quot;&quot;, 0, Array())
	  	oGraphic = oDocCtrl.getSelection().getByIndex(0)

		if bShapeIsSelected then oGraphic.position = oShapePosition

	end if
	
	AttachAttributes (oGraphic, sIdentifier, sNumber)
End Sub


Sub InsertOOoLilyPondObject (sIdentifier As String, sNumber As String, sAddition As String, bFirstCall)
	&apos; bFirstCall: (True)  = existing object is replaced
	&apos;			  (False) = new object is created
	Dim oAttributes As Object
	Dim oGraphic As Object
	Dim oLilyPondAttribute As Object
	&apos; Dim oCursor As Object		&apos; not in use

	On Error GoTo ErrorHandler

	&apos; insert the Bitmap
	If bInWriter Then

		Select Case oCurrentGraphicObject.getImplementationName()		
		Case &quot;com.sun.star.drawing.SvxShapeCollection&quot;  &apos; OLy &lt; 0.4 in Writer or inserted &quot;via clipboard&quot;
			If bFirstCall Then oCurrentGraphicObject(0).getParent().remove(oCurrentGraphicObject(0)) &apos; Delete old OLyObject
			If Not IsNull (oCurrentCursor) Then
				oGraphic = ImportBitmapIntoWriter (ConvertToURL (sTmpPath &amp; constOLyFileName &amp; sNumber &amp; sAddition &amp; &quot;.&quot; &amp; sExtension), oCurrentCursor, true)
			Else &apos; should never be the case
				oGraphic = ImportBitmapIntoWriter (ConvertToURL (sTmpPath &amp; constOLyFileName &amp; sNumber &amp; sAddition &amp; &quot;.&quot; &amp; sExtension), oCurrentGraphicObject(0), true)
			End If
			oGraphic.VertOrient = 0
			if bShapeIsSelected And (iAnchor = iOriginalAnchor) And Not IsNull (oShapePosition) Then
				oGraphic.HoriOrientPosition = oShapePosition.X
				oGraphic.VertOrientPosition = oShapePosition.Y
				If iAnchor = 2 Then  &apos; AT_PAGE
					oGraphic.AnchorPageNo = iAnchorPageNo
					&apos; OpenOffice was crashed by this when iAnchor was AS_CHARACTER
					&apos; No problem with LibreOffice
				End If
			End If		

		Case &quot;SwXTextGraphicObject&quot; &apos; Graphic is selected in Writer
			If bFirstCall Then
				oGraphic = ImportBitmapIntoWriter (ConvertToURL (sTmpPath &amp; constOLyFileName &amp; sNumber &amp; sAddition &amp; &quot;.&quot; &amp; sExtension), oCurrentGraphicObject, false)
				If Not IsNull (oCurrentCursor) Then oCurrentCursor.goRight (1, false)
			Else
				If Not IsNull (oCurrentCursor) Then
					oGraphic = ImportBitmapIntoWriter (ConvertToURL (sTmpPath &amp; constOLyFileName &amp; sNumber &amp; sAddition &amp; &quot;.&quot; &amp; sExtension), oCurrentCursor, true)
				Else
					oGraphic = ImportBitmapIntoWriter (ConvertToURL (sTmpPath &amp; constOLyFileName &amp; sNumber &amp; sAddition &amp; &quot;.&quot; &amp; sExtension), oCurrentGraphicObject, true)
				End If
			End If
			oGraphic.VertOrient = 0
			
		Case &quot;SwXTextRanges&quot; &apos; Nothing or normal text selection in Writer
			oGraphic = ImportBitmapIntoWriter (ConvertToURL (sTmpPath &amp; constOLyFileName &amp; sNumber &amp; sAddition &amp; &quot;.&quot; &amp; sExtension), oCurrentCursor, false)
			oGraphic.VertOrient = 0

		End Select

		&apos; set image properties
		oGraphic.AnchorType = iAnchor
		oGraphic.Surround = iWrap

		oGraphic.TopMargin = 0
		oGraphic.BottomMargin = 0
		oGraphic.HoriOrient = com.sun.star.text.HoriOrientation.NONE
		if iAnchor = com.sun.star.text.TextContentAnchorType.AT_CHARACTER Then
			oGraphic.HoriOrientRelation = com.sun.star.text.RelOrientation.CHAR
			oGraphic.VertOrientRelation = com.sun.star.text.RelOrientation.CHAR
		Else
			oGraphic.HoriOrientRelation = com.sun.star.text.RelOrientation.PRINT_AREA
			oGraphic.HoriOrientRelation = com.sun.star.text.RelOrientation.PRINT_AREA
		End If
		
	Else &apos;We are in Impress or Draw

		If  IsNull(oCurrentGraphicObject) Then
			&apos; Nothing is selected
			oGraphic = ImportBitmapIntoDraw (ConvertToURL (sTmpPath &amp; constOLyFileName &amp; sNumber &amp; sAddition &amp; &quot;.&quot; &amp; sExtension))
		Else
			&apos; OlyObject is selected
			oGraphic = ImportBitmapIntoDraw (ConvertToURL (sTmpPath &amp; constOLyFileName &amp; sNumber &amp; sAddition &amp; &quot;.&quot; &amp; sExtension), oCurrentGraphicObject.getByIndex(0))
		End If
	End If
	
	
	&apos; select the object
	oDocCtrl.select (oGraphic)
	AttachAttributes (oGraphic, sIdentifier, sNumber)

	Exit Sub
	
	ErrorHandler:
		Select Case Err
		Case 1	&apos; 	&quot;End of content node doesn&apos;t have the proper start node&quot;
			Msgbox (Error &amp; Chr(10) &amp; Chr(10) &amp; oMessages.getPropertyValue (&quot;MsgNoStartNode&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
				&apos; MsgNoStartNode
		Case Else
			Msgbox (Error, iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
		End Select
	Exit Sub

End Sub



Function ReadAttributes( oShape As Object ) As Boolean
	Dim sLyAttributes As Variant &apos;Output of Split Function
	
	&apos; Read the graphic&apos;s size and crop settings:
	oShapeCrop = oShape.GraphicCrop
	oShapeSize = oShape.Size
	
	bHasSeparateImages = False  &apos; global variable

	If bInWriter Then
		iAnchor=oShape.AnchorType
		iWrap=oShape.Surround
	Else
		iAnchor=-1
		iWrap=-1
	End If
	iOriginalAnchor = iAnchor

	If oShape.UserDefinedAttributes().hasByName(&quot;OOoLilyPondArgs&quot;) Then
		&apos;Object created by OOoLilyPond Versions &lt;= 0.2.1
		sLyAttributes=oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondArgs&quot;).Value
		sLyAttributes=Split(oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondArgs&quot;).Value, &quot;§&quot;, 4)
		sTemplate=sLyAttributes(0)
		sCode=sLyAttributes(3)
		bUseDefaultCode=False
		ReadAttributes = True
		Exit Function
	End If

	If oShape.UserDefinedAttributes().hasByName(&quot;OOoLilyPondCode&quot;) Then
		sCode=oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondCode&quot;).Value
	Else
		&apos; Msgbox (&quot;The selected object is not an OLy object ...&quot;, 0, &quot;Error&quot;)
		Msgbox (oMessages.getPropertyValue (&quot;sMsgNoOlyObject&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
		ReadAttributes = False
		Exit Function
	End If

	&apos; Attribute does exist since OOoLilyPond 0.3, existance mustn&apos;t be checked
	sTemplate=oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondTemplate&quot;).Value

	&apos; The following Attributes do exist only since OOoLilyPond 0.4	
	If oShape.UserDefinedAttributes().hasByName(&quot;OOoLilyPondUseDefaultCode&quot;) Then
		bUseDefaultCode=StringToBool(oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondUseDefaultCode&quot;).Value)
		sLineWidth=oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondLineWidth&quot;).Value
		bUseDefaultLineWidth=StringToBool(oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondUseDefaultLineWidth&quot;).Value)
		sStaffSize=oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondStaffSize&quot;).Value
		sCustom1=oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondCustom1&quot;).Value
		sCustom2=oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondCustom2&quot;).Value
		bUseDefaultStaffSize=StringToBool(oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondUseDefaultStaffSize&quot;).Value)
		bUseDefaultCustom1=StringToBool(oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondUseDefaultCustom1&quot;).Value)
		bUseDefaultCustom2=StringToBool(oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondUseDefaultCustom2&quot;).Value)
		
		&apos; Custom3 and Custom4 attributes exist since OOoLilyPond 1.0.0:
		If oShape.UserDefinedAttributes().hasByName(&quot;OOoLilyPondCustom3&quot;) Then
			sCustom3=oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondCustom3&quot;).Value
		End If
		If oShape.UserDefinedAttributes().hasByName(&quot;OOoLilyPondCustom4&quot;) Then
			sCustom4=oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondCustom4&quot;).Value
		End If
		If oShape.UserDefinedAttributes().hasByName(&quot;OOoLilyPondUseDefaultCustom3&quot;) Then
			bUseDefaultCustom3=StringToBool(oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondUseDefaultCustom3&quot;).Value)
		End If
		If oShape.UserDefinedAttributes().hasByName(&quot;OOoLilyPondUseDefaultCustom4&quot;) Then
			bUseDefaultCustom4=StringToBool(oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondUseDefaultCustom4&quot;).Value)
		End If
		
		&apos; Option... attributes exist since OOoLilyPond 0.5.13:
		bOption1 = False
		bOption2 = False
		bOption3 = False
		bOption4 = False
		If oShape.UserDefinedAttributes().hasByName(&quot;OOoLilyPondOption1Value&quot;) Then
			bOption1 = StringToBool (oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondOption1Value&quot;).Value)
		End If
		If oShape.UserDefinedAttributes().hasByName(&quot;OOoLilyPondOption2Value&quot;) Then
			bOption2 = StringToBool (oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondOption2Value&quot;).Value)
		End If
		If oShape.UserDefinedAttributes().hasByName(&quot;OOoLilyPondOption3Value&quot;) Then
			bOption3 = StringToBool (oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondOption3Value&quot;).Value)
		End If
		If oShape.UserDefinedAttributes().hasByName(&quot;OOoLilyPondOption4Value&quot;) Then
			bOption4 = StringToBool (oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondOption4Value&quot;).Value)
		End If
		
		&apos; Maybe the template is included within the OLy object:
		If oShape.UserDefinedAttributes().hasByName(&quot;OOoLilyPondTemplateCode&quot;) Then
			sTemplateCode = oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondTemplateCode&quot;).Value
			bContainsTemplate = True
			bTemplateSaved = False
		Else
			bContainsTemplate = False
		End If
		
		bHasSeparateImages = (GetObjectIdentifier (oShape) &lt;&gt; &quot;&quot;)
		bSaveAsSeparateImages = bHasSeparateImages
		
		If oShape.UserDefinedAttributes().hasByName(&quot;OOoLilyPondFirstImage&quot;) Then
			iFrom = CInt (oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondFirstImage&quot;).Value)
		Else
			iFrom = 0
		End If
		If oShape.UserDefinedAttributes().hasByName(&quot;OOoLilyPondLastImage&quot;) Then
			iTo = CInt (oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondLastImage&quot;).Value)
		Else
			iTo = 0
		End If
		
	Else
		&apos;Prevent loosing the code for OOoLilyPond 0.3 Objects
		bUseDefaultCode=False
	End If

    ReadAttributes=True
    
End Function


Function IsOLyObject (oShape As Object) As Boolean
	&apos; Test if a graphic object is an OOoLilyPond object

	IsOLyObject = ((oShape.UserDefinedAttributes().hasByName(&quot;OOoLilyPondArgs&quot;)) Or (oShape.UserDefinedAttributes().hasByName(&quot;OOoLilyPondCode&quot;)))
End Function


Function GetObjectIdentifier (oShape As Object) As String
	&apos; Return the &quot;OOoLilyPondIdentifier&quot; string of a graphic object
	&apos; If it has none, return empty string

	If oShape.UserDefinedAttributes().hasByName (&quot;OOoLilyPondIdentifier&quot;) Then
		GetObjectIdentifier = oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondIdentifier&quot;).Value
	Else
		GetObjectIdentifier = &quot;&quot;
	End If
End Function


Function GetObjectImageNum (oShape As Object) As String
	&apos; Return the &quot;OOoLilyPondImageNum&quot; string of a graphic object
	&apos; If it has none, return empty string

	If oShape.UserDefinedAttributes().hasByName (&quot;OOoLilyPondImageNum&quot;) Then
		GetObjectImageNum = oShape.UserDefinedAttributes().getByName(&quot;OOoLilyPondImageNum&quot;).Value
	Else
		GetObjectImageNum = &quot;&quot;
	End If
End Function




</script:module>