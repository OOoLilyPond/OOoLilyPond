<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Batch" script:language="StarBasic" script:moduleType="normal">&apos; Subs and Functions related with batch processing of all existing OLy objects in a Writer document

Option Explicit


Sub PerformBatchProcessing ()
&apos; This is the main function for batch processing
&apos; It initializes OOoLilyPond and recompiles matching objects without opening the editor dialog.
	Dim oDrawPage As Object
	Dim oCurrentObject As Object
	Dim oProgressBar As Object
	Dim iCount As Integer
	Dim i As Integer
	Dim iLastObject As Integer
	
	Dim oGraphic As Object
	&apos; Dim oDocCtrl As Object
	Dim oGraphicObjects ()
	Dim sIdentifiers ()
	Dim sImageNums ()
	Dim sCurrentImageNum As String
	Dim sCurrentIdentifier As String
	Dim iPosInList As Integer

	oBatchDialog.EndExecute()

	oDrawPage = oDoc.DrawPage
	iCount = oDrawPage.Count
	oGraphicObjects = DimArray (iCount) 
	sIdentifiers = DimArray (iCount) 
	sImageNums = DimArray (iCount) 
	iLastObject = -1
	&apos; Prepare list of objects to be processed:
	For i = 0 to iCount - 1
		oCurrentObject = oDrawPage.getByIndex (i)
		If IsOLyObject (oCurrentObject) Then
			sCurrentIdentifier = GetObjectIdentifier (oCurrentObject)
			If sCurrentIdentifier = &quot;&quot; Then  &apos; not a multi-image object
				iLastObject = iLastObject + 1
				oGraphicObjects (iLastObject) = oCurrentObject
				sIdentifiers (iLastObject) = &quot;&quot;
				sImageNums (iLastObject) = &quot;&quot;
			Else							 &apos; multi-image object
				sCurrentImageNum = GetObjectImageNum (oCurrentObject)
				iPosInList = PosInArray (sIdentifiers, sCurrentIdentifier, iLastObject)
				If iPosInList = -1 Then				&apos; array does not yet contain a sibling
					iLastObject = iLastObject + 1
					oGraphicObjects (iLastObject) = oCurrentObject
					sIdentifiers (iLastObject) = sCurrentIdentifier
					sImageNums (iLastObject) = sCurrentImageNum
				Else								&apos; array already contains a sibling
					&apos; Dim sImNum As String	&apos; obsolete, just for debugging
					&apos; sImNum = sImageNums (iPosInList)
					If HasHigherValue (sImageNums (iPosInList), sCurrentImageNum) Then
						oGraphicObjects (iPosInList) = oCurrentObject  &apos; replace objects with higher ImageNum
						sIdentifiers (iPosInList) = sCurrentIdentifier
						sImageNums (iPosInList) = sCurrentImageNum
					End If
				End If
			End If
		End If
	next i
	
	bKeepCrop = CheckBoxStateToBool (oBatchDialog.getControl(&quot;bKeepCrop&quot;).getState())
	oProgressBar = oDocCtrl.StatusIndicator
	oProgressBar.start (oMessages.getPropertyValue (&quot;sMsgBatchProcessing&quot;), iLastObject + 1)
	&apos; now process objects from the list:
	For i = 0 to iLastObject
		
		oProgressBar.setValue (i + 1)
		oProgressBar.setText (oMessages.getPropertyValue (&quot;sMsgBatchProcessing&quot;) &amp; i + 1 &amp; &quot;/&quot; &amp; iLastObject + 1)
		
		oCurrentGraphicObject = oGraphicObjects (i)  &apos; global variable		
		oDocCtrl.select (oCurrentGraphicObject)
		If ReadSelectionObject () Then  &apos; create Cursor and read Attributes if Object is selected
		&apos; Now we know which template to use
			ReadTemplate (True)
			bSaveAsSeparateImages = bHasSeparateImages
			If oBatchDialog.getControl(&quot;SeparateImages_Yes&quot;).getState() Then bSaveAsSeparateImages = True
			If oBatchDialog.getControl(&quot;SeparateImages_No&quot;).getState() Then bSaveAsSeparateImages = False
			
			If MeetsCondition (&quot;A&quot;) And  MeetsCondition (&quot;B&quot;) Then
				PerformReplacement (&quot;A&quot;)
				PerformReplacement (&quot;B&quot;)
				Make (true)
			End If
		End If
	next i
	&apos; oProgressBar.Reset
	oProgressBar.end()
End Sub


Function MeetsCondition (sID As String) As Boolean
&apos; Indicates if the current OLy object meets the condition set in a rule in the Batch dialogue.
&apos; sID = &quot;A&quot;: rule 1
&apos; sID = &quot;B&quot;: rule 2

	Dim sSearchField As String
	
	On Error Goto ErrorHandler  &apos; might happen if an argument for getControl() is invalid

	If oBatchDialog.getControl (&quot;NoCondition_&quot; &amp; sID).getState() Then
		MeetsCondition = True
		Exit Function
	End If
	
	Select Case oBatchDialog.getControl (&quot;sSearchField_&quot; &amp; sID).getText()
	Case &quot;Code&quot;
		sSearchField = sCode
	Case &quot;Staff Size&quot;
		sSearchField = sStaffSize
	Case &quot;Line Width&quot;
		sSearchField = sLineWidth
	Case &quot;Custom 1&quot;
		sSearchField = sCustom1
	Case &quot;Custom 2&quot;
		sSearchField = sCustom2
	Case &quot;Template name&quot;
		sSearchField = sTemplate
	Case Else	&apos; should NEVER happen
		sSearchField = &quot;&quot;
	End Select
	
	If oBatchDialog.getControl (&quot;ConditionContains_&quot; &amp; sID).getState() Then
		Dim iSearchMode As Integer
		iSearchMode = 0
		If CheckBoxStateToBool (oBatchDialog.getControl (&quot;IgnoreCase_&quot; &amp; sID).getState()) Then iSearchMode = 1
		MeetsCondition = (InStr (1, sSearchField, oBatchDialog.getControl (&quot;sSearch_&quot; &amp; sID).getText(), iSearchMode) &gt; 0)
		Exit Function
	End If
	
	If oBatchDialog.getControl (&quot;ConditionIs_&quot; &amp; sID).getState() Then
		MeetsCondition = (sSearchField = oBatchDialog.getControl (&quot;sSearch_&quot; &amp; sID).getText())
		Exit Function
	End If

	ErrorHandler:
	MeetsCondition = False
End Function


Sub PerformReplacement (sID As String)
&apos; Perform the changes set in a rule in the Batch dialogue.
&apos; sID = &quot;A&quot;: rule 1
&apos; sID = &quot;B&quot;: rule 2

	Dim sReplaceString As String

	On Error Goto ErrorHandler  &apos; might happen if an argument for getControl() is invalid

	If oBatchDialog.getControl (&quot;NoChange_&quot; &amp; sID).getState() Then
		Exit Sub
	End If

	If oBatchDialog.getControl (&quot;SetUseDefault_&quot; &amp; sID).getState() Then
		Select Case oBatchDialog.getControl (&quot;sSearchField_&quot; &amp; sID).getText()
		Case &quot;Code&quot;
			sCode = sDefaultCode
		Case &quot;Staff Size&quot;
			sStaffSize = sDefaultStaffSize
		Case &quot;Line Width&quot;
			sLineWidth = sDefaultLineWidth
		Case &quot;Custom 1&quot;
			sCustom1 = sDefaultCustom1
		Case &quot;Custom 2&quot;
			sCustom2 = sDefaultCustom2
		Case &quot;Template name&quot;
			sTemplate = sWriterDefaultTemplate
		End Select
		Exit Sub
	End If
	
	sReplaceString = oBatchDialog.getControl (&quot;sReplace_&quot; &amp; sID).getText()

	If oBatchDialog.getControl (&quot;ReplaceWholeField_&quot; &amp; sID).getState() Then
		Select Case oBatchDialog.getControl (&quot;sSearchField_&quot; &amp; sID).getText()
		Case &quot;Code&quot;
			sCode = sReplaceString
		Case &quot;Staff Size&quot;
			sStaffSize = sReplaceString
		Case &quot;Line Width&quot;
			sLineWidth = sReplaceString
		Case &quot;Custom 1&quot;
			sCustom1 = sReplaceString
		Case &quot;Custom 2&quot;
			sCustom2 = sReplaceString
		Case &quot;Template name&quot;
			sTemplate = sReplaceString
		End Select
		Exit Sub
	End If
	
	Dim ISearchMode As Integer
	iSearchMode = 0
	If CheckBoxStateToBool (oBatchDialog.getControl (&quot;IgnoreCase_&quot; &amp; sID).getState()) Then iSearchMode = 1

	If oBatchDialog.getControl (&quot;ReplaceSearchedString_&quot; &amp; sID).getState() Then
		Select Case oBatchDialog.getControl (&quot;sSearchField_&quot; &amp; sID).getText()
		Case &quot;Code&quot;
			ReplaceSubStrings (sCode, oBatchDialog.getControl (&quot;sSearch_&quot; &amp; sID).getText(), sReplaceString, iSearchMode)
		Case &quot;Staff Size&quot;
			ReplaceSubStrings (sStaffSize, oBatchDialog.getControl (&quot;sSearch_&quot; &amp; sID).getText(), sReplaceString, iSearchMode)
		Case &quot;Line Width&quot;
			ReplaceSubStrings (sLineWidth, oBatchDialog.getControl (&quot;sSearch_&quot; &amp; sID).getText(), sReplaceString, iSearchMode)
		Case &quot;Custom 1&quot;
			ReplaceSubStrings (sCustom1, oBatchDialog.getControl (&quot;sSearch_&quot; &amp; sID).getText(), sReplaceString, iSearchMode)
		Case &quot;Custom 2&quot;
			ReplaceSubStrings (sCustom2, oBatchDialog.getControl (&quot;sSearch_&quot; &amp; sID).getText(), sReplaceString, iSearchMode)
		Case &quot;Template name&quot;
			ReplaceSubStrings (sTemplate, oBatchDialog.getControl (&quot;sSearch_&quot; &amp; sID).getText(), sReplaceString, iSearchMode)
		End Select
		Exit Sub
	End If
		
	ErrorHandler:
End Sub



</script:module>