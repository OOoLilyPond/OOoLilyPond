<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Editor" script:language="StarBasic">&apos; Subs and Functions related with the OOoLilyPond Editor Dialogue

Option Explicit


&apos; ***************************************************
&apos;    Open / Update the OOoLilyPond Editor dialogue
&apos; ***************************************************

Sub EditorDialog()

	Dim oFieldModel As Object
	Dim myFont As New com.sun.star.awt.FontDescriptor
	Dim sImageNum As String

	&apos; Load the library OOoLilyPond...
	&apos; DialogLibraries.LoadLibrary (constOLyLibraryName)
	
	&apos; Create the dialog object
	oEditorDialog = createUnoDialog( DialogLibraries.GetByName(constOLyLibraryName).GetByName(&quot;GUI_Editor&quot;) )
	ReadDialogStringsFromVar (oEditorDialog, sEditorDialogStrings, &quot;&quot;)
	sImageNum = &quot;&quot;
	if bShapeIsSelected Then
		Select Case oCurrentGraphicObject.getImplementationName()
		Case &quot;com.sun.star.drawing.SvxShapeCollection&quot; 	&apos; inserted into Writer via Clipboard OR inserted into Draw/Impress
			sImageNum = GetObjectImageNum (oCurrentGraphicObject.getByIndex(0))
		Case &quot;SwXTextGraphicObject&quot;						&apos; Graphic is selected in Writer
			sImageNum = GetObjectImageNum (oCurrentGraphicObject)
		End Select
	End If
	If Len (sImageNum) &gt; 0 Then
		oEditorDialog.getModel().Title = oEditorDialog.getModel().Title  &amp; &quot;   [&quot; &amp; constOLyFileName &amp; sImageNum &amp; &quot;.&quot; &amp; sExtension &amp; &quot;]&quot;
	End If
	
	&apos; Preserve original field labels for LineWidth, StaffSize, Custom1 ... Custom4, Option1 ... Option4:
	sDefaultLineWidthLabel = oEditorDialog.getModel().getByName(&quot;LabelLineWidth&quot;).Label
	sDefaultStaffSizeLabel = oEditorDialog.getModel().getByName(&quot;LabelStaffSize&quot;).Label
	sDefaultCustom1Label = oEditorDialog.getModel().getByName(&quot;LabelCustom1&quot;).Label
	sDefaultCustom2Label = oEditorDialog.getModel().getByName(&quot;LabelCustom2&quot;).Label
	sDefaultCustom3Label = oEditorDialog.getModel().getByName(&quot;LabelCustom3&quot;).Label
	sDefaultCustom4Label = oEditorDialog.getModel().getByName(&quot;LabelCustom4&quot;).Label
	sDefaultOption1Label = oEditorDialog.getModel().getByName(&quot;bOption1&quot;).Label
	sDefaultOption2Label = oEditorDialog.getModel().getByName(&quot;bOption2&quot;).Label
	sDefaultOption3Label = oEditorDialog.getModel().getByName(&quot;bOption3&quot;).Label
	sDefaultOption4Label = oEditorDialog.getModel().getByName(&quot;bOption4&quot;).Label
	
	&apos; Change the font of the editor pane
	oFieldModel = oEditorDialog.getControl(&quot;sCode&quot;).getModel()
	MyFont.Name = sEditorFontName
	&apos; MyFont.StyleName = &quot;Fett&quot;  &apos; bad idea...
	MyFont.Height = sEditorFontSize
	oFieldModel.FontDescriptor = MyFont
	  
	&apos; Fill in the values
	If bUseDefaultCode Then
		sCode=&quot;&quot;
		UseDefaultCode()
	Else
		oEditorDialog.getControl(&quot;sCode&quot;).setText(sCode)
	End If

	If bUseDefaultLineWidth Then
		UseDefaultLineWidth()
	Else
		oEditorDialog.getControl(&quot;sLineWidth&quot;).setText(sLineWidth)
	End if
	
	If bUseDefaultStaffSize Then
		UseDefaultStaffSize()
	Else
		oEditorDialog.getControl(&quot;sStaffSize&quot;).setText(sStaffSize)
	End If
	
	If bUseDefaultCustom1 Then
		UseDefaultCustom1()
	Else
		oEditorDialog.getControl(&quot;sCustom1&quot;).setText(sCustom1)
	End If
	
	If bUseDefaultCustom2 Then
		UseDefaultCustom2()
	Else
		oEditorDialog.getControl(&quot;sCustom2&quot;).setText(sCustom2)
	End If

	If bUseDefaultCustom3 Then
		UseDefaultCustom3()
	Else
		oEditorDialog.getControl(&quot;sCustom3&quot;).setText(sCustom3)
	End If
	
	If bUseDefaultCustom4 Then
		UseDefaultCustom4()
	Else
		oEditorDialog.getControl(&quot;sCustom4&quot;).setText(sCustom4)
	End If

	If Not bShapeIsSelected Then
		bOption1 = bDefaultOption1
		bOption2 = bDefaultOption2
		bOption3 = bDefaultOption3
		bOption4 = bDefaultOption4
	End If
	oEditorDialog.getControl(&quot;bOption1&quot;).setState(BoolToCheckBoxState(bOption1))
	oEditorDialog.getControl(&quot;bOption2&quot;).setState(BoolToCheckBoxState(bOption2))
	oEditorDialog.getControl(&quot;bOption3&quot;).setState(BoolToCheckBoxState(bOption3))
	oEditorDialog.getControl(&quot;bOption4&quot;).setState(BoolToCheckBoxState(bOption4))
	
	&apos; Fill the Template Combobox
	Select Case ListOfTemplates(oEditorDialog.getControl(&quot;sTemplate&quot;))
	Case 1
		&apos; MsgBox(&quot;No templates are found at the path: &quot; &amp;  Chr(10) &amp; Chr(34) &amp; ConvertFromURL(sTemplatePath) &amp; Chr(34) &amp; &quot;.&quot; &amp; Chr(10) &amp; constOLyLibraryName &amp; &quot; will not work without a template.&quot;)
		MsgBox (oMessages.getPropertyValue (&quot;sMsgNoTemplatesFound1&quot;) &amp; ConvertFromURL(sTemplatePath) &amp; oMessages.getPropertyValue (&quot;sMsgNoTemplatesFound2&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
	Case 2
		&apos; MsgBox(&quot;The template path &quot; &amp;  Chr(10) &amp; Chr(34) &amp; ConvertFromURL(sTemplatePath) &amp; Chr(34) &amp; &quot; is not found.&quot;) &apos; Should never happen here.
		MsgBox (oMessages.getPropertyValue (&quot;sMsgTemplatePathNotFound1&quot;) &amp; ConvertFromURL(sTemplatePath) &amp; oMessages.getPropertyValue (&quot;sMsgTemplatePathNotFound2&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;)) &apos; Should never happen here.
	End Select
	oEditorDialog.getControl(&quot;sTemplate&quot;).setText(sTemplate)

	&apos; Anchor settings
	If iAnchor = com.sun.star.text.TextContentAnchorType.AS_CHARACTER Then oEditorDialog.getControl(&quot;AnchorAsCharacter&quot;).setState(true)
	If iAnchor = com.sun.star.text.TextContentAnchorType.AT_CHARACTER Then oEditorDialog.getControl(&quot;AnchorToCharacter&quot;).setState(true)
	If iAnchor = com.sun.star.text.TextContentAnchorType.AT_PARAGRAPH Then  oEditorDialog.getControl(&quot;AnchorToParagraph&quot;).setState(true)
	If iAnchor = com.sun.star.text.TextContentAnchorType.AT_PAGE Then oEditorDialog.getControl(&quot;AnchorToPage&quot;).setState(true)

	If iWrap = com.sun.star.text.WrapTextMode.NONE Then oEditorDialog.getControl(&quot;NoWrap&quot;).setState(true)
	If iWrap = com.sun.star.text.WrapTextMode.DYNAMIC Then oEditorDialog.getControl(&quot;OptimalPageWrap&quot;).setState(true)
	If iWrap = com.sun.star.text.WrapTextMode.THROUGHT Then oEditorDialog.getControl(&quot;WrapThrough&quot;).setState(true)	
	
	oEditorDialog.getControl(&quot;bKeepCrop&quot;).setState (BoolToCheckBoxState(bKeepCrop And bShapeIsSelected))
	oEditorDialog.getControl(&quot;bSaveAsSeparateImages&quot;).setState (BoolToCheckBoxState (bSaveAsSeparateImages And bInWriter))
	If iFrom &gt; 0 Then oEditorDialog.getControl(&quot;iFrom&quot;).setValue (iFrom)
	If iTo   &gt; 0 Then oEditorDialog.getControl(&quot;iTo&quot;).setValue (iTo)	

	&apos; grey out inactive control elements
	GreyOut()
	
	&apos; open the dialog
    oEditorDialog.Execute()

End Sub


Sub UpdateFieldAppearance (sControl As String, sLabel As String, sDefault As String, sTrue As String, sFalse As String, bFieldExists As Boolean)
	&apos; Care about dialog elements that can either be TextEdit or CheckBox
	
	Dim sActualContent As String
	
	&apos; grey out input fields:
	oEditorDialog.getControl (&quot;bUseDefault&quot; &amp; sControl).setEnable (bFieldExists)
	oEditorDialog.getControl (&quot;Label&quot;       &amp; sControl).setEnable (bFieldExists)
	oEditorDialog.getControl (&quot;b&quot;           &amp; sControl).setEnable (bFieldExists)
	oEditorDialog.getControl (&quot;s&quot;           &amp; sControl).setEnable (bFieldExists)
	
	If bFieldExists Then	
		sActualContent = oEditorDialog.getControl (&quot;s&quot; &amp; sControl).getText()
		If (sDefault = sTrue Or sDefault = sFalse) And (sActualContent = sTrue Or sActualContent = sFalse) Then  &apos; use CheckBox
			oEditorDialog.getControl (&quot;b&quot; &amp; sControl).SetState (BoolToCheckBoxState (sActualContent = sTrue))
			oEditorDialog.getModel().getByName (&quot;b&quot; &amp; sControl).Label = sLabel
			oEditorDialog.getModel().getByName (&quot;Label&quot; &amp; sControl).Label = &quot;&quot;
			oEditorDialog.getModel().getByName (&quot;s&quot; &amp; sControl).EnableVisible = False
			oEditorDialog.getModel().getByName (&quot;b&quot; &amp; sControl).EnableVisible = True
		Else																									 &apos; use TextEdit
			oEditorDialog.getModel().getByName (&quot;Label&quot; &amp; sControl).Label = sLabel
			oEditorDialog.getModel().getByName (&quot;s&quot; &amp; sControl).EnableVisible = True
			oEditorDialog.getModel().getByName (&quot;b&quot; &amp; sControl).EnableVisible = False
		End If
	Else
		oEditorDialog.getModel().getByName (&quot;Label&quot; &amp; sControl).Label = sLabel
		oEditorDialog.getModel().getByName (&quot;s&quot; &amp; sControl).EnableVisible = True
		oEditorDialog.getModel().getByName (&quot;b&quot; &amp; sControl).EnableVisible = False
	End If
End Sub


Sub GreyOut()
	&apos; Grey out inactive control elements

	Dim bWrapSettings As Boolean
	Dim bEnableSeparateImages As Boolean
	Dim bEnableFromTo As Boolean

	&apos; Check if dialog is existing
	If IsNull(oEditorDialog) Then 
		Exit Sub
	End If

	bWrapSettings = (Not oEditorDialog.getControl(&quot;AnchorAsCharacter&quot;).getState()) And bInWriter
	bEnableSeparateImages = oEditorDialog.getControl(&quot;AnchorAsCharacter&quot;).getState() And bInWriter And (sFormat = &quot;eps&quot; Or sFormat = &quot;pdf to svg&quot; Or sFormat = &quot;pdf&quot;)  &apos; hopefully one day &quot;pdf&quot; will come true

	&apos; grey out Anchor and Wrap radio buttons when we are not in Writer
	oEditorDialog.getControl(&quot;AnchorFrameControl&quot;).setEnable(bInWriter)
	oEditorDialog.getControl(&quot;AnchorAsCharacter&quot;).setEnable(bInWriter)
	oEditorDialog.getControl(&quot;AnchorToCharacter&quot;).setEnable(bInWriter)
	oEditorDialog.getControl(&quot;AnchorToParagraph&quot;).setEnable(bInWriter)
	oEditorDialog.getControl(&quot;AnchorToPage&quot;).setEnable(bInWriter)

	&apos; grey out Wrap radio buttons when Anchor is &quot;as Character&quot;
	oEditorDialog.getControl(&quot;WrapFrameControl&quot;).setEnable(bWrapSettings)
	oEditorDialog.getControl(&quot;NoWrap&quot;).setEnable(bWrapSettings)
	oEditorDialog.getControl(&quot;OptimalPageWrap&quot;).setEnable(bWrapSettings)
	oEditorDialog.getControl(&quot;WrapThrough&quot;).setEnable(bWrapSettings)

	&apos; grey out and un-check SeparateImages checkbox when Anchor is NOT &quot;as Character&quot;
	oEditorDialog.getControl (&quot;bSaveAsSeparateImages&quot;).setEnable (bEnableSeparateImages)
	If Not bEnableSeparateImages Then oEditorDialog.getControl (&quot;bSaveAsSeparateImages&quot;).SetState (BoolToCheckBoxState (False))
	
	&apos; grey out &quot;from&quot; and &quot;to&quot; fields when SeparateImages not checked
	bEnableFromTo = bEnableSeparateImages And CheckBoxStateToBool (oEditorDialog.getControl (&quot;bSaveAsSeparateImages&quot;).GetState)
	oEditorDialog.getControl (&quot;LabelFrom&quot;).setEnable (bEnableFromTo)
	oEditorDialog.getControl (&quot;iFrom&quot;).    setEnable (bEnableFromTo)
	oEditorDialog.getControl (&quot;LabelTo&quot;).  setEnable (bEnableFromTo)
	oEditorDialog.getControl (&quot;iTo&quot;).      setEnable (bEnableFromTo)
	
	&apos; grey out KeepCrop checkbox when no current OLy object is selected
	oEditorDialog.getControl(&quot;bKeepCrop&quot;).setEnable(bShapeIsSelected)
	
	&apos; Make sure sLineWidthLabel etc. are always usable: 
	If Not bLineWidthLabelExists Then sLineWidthLabel = sDefaultLineWidthLabel
	If Not bStaffSizeLabelExists Then sStaffSizeLabel = sDefaultStaffSizeLabel
	If Not bCustom1LabelExists   Then sCustom1Label   = sDefaultCustom1Label
	If Not bCustom2LabelExists   Then sCustom2Label   = sDefaultCustom2Label
	If Not bCustom3LabelExists   Then sCustom3Label   = sDefaultCustom3Label
	If Not bCustom4LabelExists   Then sCustom4Label   = sDefaultCustom4Label
	If Not bOption1LabelExists   Then sOption1Label   = sDefaultOption1Label
	If Not bOption2LabelExists   Then sOption2Label   = sDefaultOption2Label
	If Not bOption3LabelExists   Then sOption3Label   = sDefaultOption3Label
	If Not bOption4LabelExists   Then sOption4Label   = sDefaultOption4Label

	&apos; grey out input fields
	UpdateFieldAppearance (&quot;LineWidth&quot;, sLineWidthLabel, sDefaultLineWidth, &quot;##t&quot;, &quot;##f&quot;, bLineWidthFieldExists)
	UpdateFieldAppearance (&quot;StaffSize&quot;, sStaffSizeLabel, sDefaultStaffSize,  &quot;#t&quot;,  &quot;#f&quot;, bStaffSizeFieldExists)
	UpdateFieldAppearance (&quot;Custom1&quot;,   sCustom1Label,   sDefaultCustom1,   &quot;##t&quot;, &quot;##f&quot;, bCustom1FieldExists)
	UpdateFieldAppearance (&quot;Custom2&quot;  , sCustom2Label,   sDefaultCustom2,   &quot;##t&quot;, &quot;##f&quot;, bCustom2FieldExists)
	UpdateFieldAppearance (&quot;Custom3&quot;,   sCustom3Label,   sDefaultCustom3,   &quot;##t&quot;, &quot;##f&quot;, bCustom3FieldExists)
	UpdateFieldAppearance (&quot;Custom4&quot;  , sCustom4Label,   sDefaultCustom4,   &quot;##t&quot;, &quot;##f&quot;, bCustom4FieldExists)
	
	&apos; labels for option checkboxes
	oEditorDialog.getModel().getByName(&quot;bOption1&quot;).Label = sOption1Label
	oEditorDialog.getModel().getByName(&quot;bOption2&quot;).Label = sOption2Label
	oEditorDialog.getModel().getByName(&quot;bOption3&quot;).Label = sOption3Label
	oEditorDialog.getModel().getByName(&quot;bOption4&quot;).Label = sOption4Label
	
	&apos; grey out option checkboxes
	oEditorDialog.getControl(&quot;bOption1&quot;).setEnable(bOption1FieldExists)
	oEditorDialog.getControl(&quot;bOption2&quot;).setEnable(bOption2FieldExists)
	oEditorDialog.getControl(&quot;bOption3&quot;).setEnable(bOption3FieldExists)
	oEditorDialog.getControl(&quot;bOption4&quot;).setEnable(bOption4FieldExists)

	&apos; indicate if Template location is other than standard template folder:
	oEditorDialog.getModel().getByName (&quot;TemplateLocationLabel&quot;).Label = sTemplateLocationLabel
	oEditorDialog.getModel().getByName (&quot;TemplateLocationLabel&quot;).helptext = sTemplateLocationHelptext
	oEditorDialog.getModel().getByName (&quot;TemplateLocationLabel&quot;).EnableVisible = (sTemplateLocationLabel &lt;&gt; &quot;&quot;)

End Sub


&apos; ********************************
&apos;    Jump to and display errors
&apos; ********************************

Sub NextErrButton
	If iErrNum&lt;iNErr Then
		iErrNum = iErrNum + 1
		&apos; DisplayError()	&apos; obsolete?
	End If
	If iErrNum&gt;=1 And iErrNum &lt;=iNErr Then
		DisplayError()
	End If
End Sub


Sub PrevErrButton
	If iErrNum&gt;1 Then
		iErrNum = iErrNum - 1		
	End If
	If iErrNum&gt;=1 And iErrNum &lt;=iNErr Then
		DisplayError()
	End If
End Sub


Sub DisplayError()
	Dim sText as String
	&apos; If iErrClass (iErrNum) = 1 Then &apos; Warning
	&apos; 	&apos; sText = &quot;Warning: &quot; &amp; sErrMsg(iErrNum)
	&apos; 	sText = oMessages.getPropertyValue (&quot;sErrClassWarning&quot;) &amp; sErrMsg (iErrNum)
	&apos; ElseIf	iErrClass (iErrNum) = 2 Then &apos; Error
	&apos; 	&apos; sText = &quot;Error: &quot; &amp; sErrMsg(iErrNum)
	&apos; 	sText = oMessages.getPropertyValue (&quot;sErrClassError&quot;) &amp; sErrMsg (iErrNum)
	&apos; End If
	
	sText = sErrMsg (iErrNum)
	
	oEditorDialog.getControl (&quot;sErrMsg&quot;).setText (sText)
	oEditorDialog.getModel().getByName (&quot;sErrMsg&quot;).BackgroundColor = lErrMsgHighlightColor
	oEditorDialog.getControl (&quot;sErrMsg&quot;).Visible = True
	oEditorDialog.getControl (&quot;sErrNum&quot;).setText (Val (iErrNum) &amp; &quot;/&quot; &amp; Val (iNErr))
	If iErrNum &gt; 1 Then
		oEditorDialog.getModel().getByName (&quot;PrevErr&quot;).Enabled = True
	Else
		oEditorDialog.getModel().getByName (&quot;PrevErr&quot;).Enabled = False
	End If
	If iErrNum &lt; iNErr Then
		oEditorDialog.getModel().getByName (&quot;NextErr&quot;).Enabled = True
	Else
		oEditorDialog.getModel().getByName (&quot;NextErr&quot;).Enabled = False
	End If
	GotoError(iErrNum)
End Sub


Sub GotoError(n)
	&apos; set Cursor to Error

	Dim oSelection As Object
	Dim iLilyPondCodePos As Integer &apos; Error position in sLilyPondCode
	Dim iErrPos As Integer &apos; Error position in OOoLilyPond field
	Dim oErrField As Object &apos; OOoLilyPond field that contains the error
	
	&apos; Calculate cursor position
	iLilyPondCodePos = RowColToPos(sLilyPondCode, iErrRow(n), iErrCol(n))
	iLilyPondCodePos = iLilyPondCodePos + 2 &apos; Correction needed, don&apos;t know why

	If  ( iLilyPondCodePos &gt;= iCodeStartPos ) And ( iLilyPondCodePos &lt;= iCodeStartPos + Len(sCode)  ) Then
		iErrPos = iLilyPondCodePos - iCodeStartPos
		oErrField = oEditorDialog.getControl(&quot;sCode&quot;)
	End If

	If  ( iLilyPondCodePos &gt;= iLineWidthStartPos ) And ( iLilyPondCodePos &lt;= iLineWidthStartPos + Len(sLineWidth)  ) Then
		iErrPos = iLilyPondCodePos - iLineWidthStartPos
		oErrField = oEditorDialog.getControl(&quot;sLineWidth&quot;)
	End If

	If  ( iLilyPondCodePos &gt;= iStaffSizeStartPos ) And ( iLilyPondCodePos &lt;= iStaffSizeStartPos + Len(sStaffSize)  ) Then
		iErrPos = iLilyPondCodePos - iStaffSizeStartPos
		oErrField = oEditorDialog.getControl(&quot;sStaffSize&quot;)
	End If

	If  ( iLilyPondCodePos &gt;= iCustom1StartPos ) And ( iLilyPondCodePos &lt;= iCustom1StartPos + Len(sCustom1)  ) Then
		iErrPos = iLilyPondCodePos - iCustom1StartPos
		oErrField = oEditorDialog.getControl(&quot;sCustom1&quot;)
	End If

	If  ( iLilyPondCodePos &gt;= iCustom2StartPos ) And ( iLilyPondCodePos &lt;= iCustom2StartPos + Len(sCustom2)  ) Then
		iErrPos = iLilyPondCodePos - iCustom2StartPos
		oErrField = oEditorDialog.getControl(&quot;sCustom2&quot;)
	End If

	If  ( iLilyPondCodePos &gt;= iCustom3StartPos ) And ( iLilyPondCodePos &lt;= iCustom3StartPos + Len(sCustom3)  ) Then
		iErrPos = iLilyPondCodePos - iCustom3StartPos
		oErrField = oEditorDialog.getControl(&quot;sCustom3&quot;)
	End If

	If  ( iLilyPondCodePos &gt;= iCustom4StartPos ) And ( iLilyPondCodePos &lt;= iCustom4StartPos + Len(sCustom4)  ) Then
		iErrPos = iLilyPondCodePos - iCustom4StartPos
		oErrField = oEditorDialog.getControl(&quot;sCustom4&quot;)
	End If

	If Not IsNull(oErrField) Then &apos; If error is within a OOoLilyPond Field
		
		oSelection = createUnoStruct( &quot;com.sun.star.awt.Selection&quot; )
		oSelection.min=iErrPos
		oSelection.max=iErrPos

		&apos; If an message box is displayed before, setting the curser may not work without waiting some time
		Wait(100)

		oErrField.setFocus()
		oErrField.getView().setSelection(oSelection)
	
	End If

End Sub


Sub ShowLilyPondOutput()

	Dim sOutput As String

	If StringFromFile(sOutput, sTmpPath &amp; constOLyFileName &amp; &quot;.out&quot;) Then

		&apos; DialogLibraries.LoadLibrary (constOlyLibraryName)
		oOutputDialog = createUnoDialog (DialogLibraries.GetByName (constOLyLibraryName).GetByName (&quot;GUI_Out&quot;))
		ReadDialogStringsFromVar (oOutputDialog, sOutputDialogStrings, &quot;&quot;)
		oOutputDialog.getControl(&quot;sOutput&quot;).setText(sOutput)
		oOutputDialog.Execute()
	
	Else
		&apos; MsgBox(&quot;There is no LilyPond output.&quot;)
		MsgBox (oMessages.getPropertyValue (&quot;sMsgNoLyOutput&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
	End If
End Sub

Sub CallExtEditor()

	Dim sCommand As String
	Dim sParam As String
	
	If (sOSType = &quot;Unix&quot;) Or (sOSType = &quot;Mac&quot;) Then
		sCommand=&quot;cd &quot; &amp; Chr(34) &amp; ConvertFromURL (sTempLyFilePath) &amp; Chr(34) &amp; &quot;; &quot; _
		&amp; Chr(34) &amp; sExtEditorExecutable &amp; Chr(34) &amp; &quot; &quot; &amp; constOLyFileName &amp; &quot;Temp.ly; if [ $? -ge 127 ]; then touch ExtEditor-cannot_execute; fi; if [ $? -ge 126 ]; then touch ExtEditor-cannot_execute; fi&quot; &apos; not found -&gt; 127, denied -&gt;126
		&apos; On Error GoTo ErrorHandler	&apos; doesn&apos;t work here, so let&apos;s use the cannot_execute-File...			
		BashCommandNoSync (sCommand)
	ElseIf sOSType = &quot;Windows&quot; Then
		
		If Not oFileAccess.exists (sExtEditorExecutable) Then
 			&apos; MsgBox(&quot;No valid file name / path for External Editor is specified.&quot;, 0, &quot;Error&quot;)
 			MsgBox (oMessages.getPropertyValue (&quot;sMsgExtEditorPathFail&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
  			Exit Sub
 		End If
		
		sCommand = sExtEditorExecutable
		&apos; sParam = ConvertFromURL (sTempLyFilePath) &amp; &quot;\&quot; &amp; constOLyFileName &amp; &quot;Temp.ly&quot;
		sParam = Chr(34) &amp; ConvertFromURL (sTempLyFilePath) &amp; constOLyFileName &amp; &quot;Temp.ly&quot; &amp; Chr(34)
		On Error GoTo ErrorHandler
	 	Shell (sCommand, 1, sParam, False)
	End If
	
	If oFileAccess.exists(sTmpPath &amp; &quot;ExtEditor-cannot_execute&quot;) then
		MsgBox (oMessages.getPropertyValue (&quot;sMsgNoValidExecutable1&quot;) &amp; ConvertFromURL (sExtEditorExecutable) &amp; oMessages.getPropertyValue (&quot;sMsgNoValidExecutable2&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
	End If
	
	Exit Sub
	
	ErrorHandler:
		MsgBox (oMessages.getPropertyValue (&quot;sMsgNoValidExecutable1&quot;) &amp; ConvertFromURL (sExtEditorExecutable) &amp; oMessages.getPropertyValue (&quot;sMsgNoValidExecutable2&quot;), iMsgBox_E, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
	Resume Next

End Sub



&apos; *******************
&apos;    Button Events
&apos; *******************

Sub AnchorButton()
	GreyOut()
End Sub


Sub SeparateImagesModified()
	GreyOut()
End Sub


Sub ConfigButton()
	ConfigDialog()
	ListOfTemplates(oEditorDialog.getControl(&quot;sTemplate&quot;))
	ReadTemplate (True) &apos; Needed if template folder changed

	If bUseDefaultLineWidth Then UseDefaultLineWidth()
	If bUseDefaultStaffSize Then UseDefaultStaffSize()
	If bUseDefaultCustom1 Then UseDefaultCustom1()
	If bUseDefaultCustom2 Then UseDefaultCustom2()
	If bUseDefaultCustom3 Then UseDefaultCustom3()
	If bUseDefaultCustom4 Then UseDefaultCustom4()

	GreyOut()
End Sub


Sub EditTemplateButton
	TmplDialog()
	ListOfTemplates(oEditorDialog.getControl(&quot;sTemplate&quot;))
	&apos; sTemplate name changes when saved under a new name
	oEditorDialog.getControl(&quot;sTemplate&quot;).setText(sTemplate)
End Sub

Sub LilyPondButton()

	oEditorDialog.getControl (&quot;LilyPondButton&quot;).setEnable (False)  &apos; avoid multiple button presses

	If bContainsTemplate And Not bIncludeTemplate And Not bTemplateSaved Then
		Select Case MsgBox (oMessages.getPropertyValue (&quot;sMsgWannaSaveOrIncludeTemplate&quot;), iMsgBox_I + iMsgBox_YNC + iMsgBox_1, oMessages.getPropertyValue (&quot;sCaptionInfo&quot;))
			Case iAnswer_Yes
				EditTemplateButton()
				Exit Sub
			Case iAnswer_No
				&apos; nothing, just continue
			Case Else  &apos; &quot;Cancel&quot; button or &quot;Escape&quot; key
				Exit Sub
		End Select
	End If

	&apos; all values except for the Anchor, Wrap and Size/Crop settings should already be updated
	if oEditorDialog.getControl(&quot;AnchorAsCharacter&quot;).getState() then iAnchor = com.sun.star.text.TextContentAnchorType.AS_CHARACTER
	if oEditorDialog.getControl(&quot;AnchorToCharacter&quot;).getState() then iAnchor = com.sun.star.text.TextContentAnchorType.AT_CHARACTER
	if oEditorDialog.getControl(&quot;AnchorToParagraph&quot;).getState() then iAnchor = com.sun.star.text.TextContentAnchorType.AT_PARAGRAPH
	if oEditorDialog.getControl(&quot;AnchorToPage&quot;).getState()      then iAnchor = com.sun.star.text.TextContentAnchorType.AT_PAGE

	if oEditorDialog.getControl(&quot;NoWrap&quot;).getState() then iWrap = com.sun.star.text.WrapTextMode.NONE
	if oEditorDialog.getControl(&quot;OptimalPageWrap&quot;).getState() then iWrap = com.sun.star.text.WrapTextMode.DYNAMIC
	if oEditorDialog.getControl(&quot;WrapThrough&quot;).getState() then iWrap = com.sun.star.text.WrapTextMode.THROUGHT
	
	bKeepCrop = CheckBoxStateToBool (oEditorDialog.getControl(&quot;bKeepCrop&quot;).getState())
	bSaveAsSeparateImages = CheckBoxStateToBool (oEditorDialog.getControl(&quot;bSaveAsSeparateImages&quot;).getState())
	iFrom = oEditorDialog.getControl(&quot;iFrom&quot;).getValue()
	iTo   = oEditorDialog.getControl(&quot;iTo&quot;).getValue()
	
	If bSaveAsSeparateImages And (iTo &gt; 0) And (iTo &lt; iFrom) Then
		MsgBox (oMessages.getPropertyValue (&quot;sMsgChangeFromTo&quot;), iMsgBox_O + iMsgBox_S, oMessages.getPropertyValue (&quot;sCaptionError&quot;))
		Exit Sub
	End If

	&apos; Create the LilyPond music and insert it...
	Make (false)	&apos; bSilent = false: don&apos;t suppress displaying errors in Editor dialog
	
	oEditorDialog.getControl (&quot;LilyPondButton&quot;).setEnable (True)

End Sub

Sub ExtEditorButton()

	If Not ApplyTemplate() Then 
		Exit Sub
	End If
	CleanUpAfterwards ()	&apos; i.e. without deleting &quot;OOoLilyPond.out&quot;
	If Not WriteLyFile (sTempLyFilePath &amp; constOLyFileName &amp; &quot;Temp.ly&quot;) Then 
		Exit Sub
	End If
	bTempLyFileCreated = True
	CallExtEditor()
	
End Sub

Sub ImportButton()

	If Not ReadTempLyFile() Then 
		Exit Sub
	End If
	oEditorDialog.getControl(&quot;sCode&quot;).setText(sCode)
	
	If bLineWidthFieldExists Then
		oEditorDialog.getControl(&quot;sLineWidth&quot;).setText(sLineWidth)
	End if
	
	If bStaffSizeFieldExists Then
		oEditorDialog.getControl(&quot;sStaffSize&quot;).setText(sStaffSize)
	End If
	
	If bCustom1FieldExists Then
		oEditorDialog.getControl(&quot;sCustom1&quot;).setText(sCustom1)
	End If
	
	If bCustom2FieldExists Then
		oEditorDialog.getControl(&quot;sCustom2&quot;).setText(sCustom2)
	End If
	
	If bCustom3FieldExists Then
		oEditorDialog.getControl(&quot;sCustom3&quot;).setText(sCustom3)
	End If
	
	If bCustom4FieldExists Then
		oEditorDialog.getControl(&quot;sCustom4&quot;).setText(sCustom4)
	End If
	
	If bOption1FieldExists Then
		oEditorDialog.getControl(&quot;bOption1&quot;).setState(BoolToCheckBoxState(bOption1))
	End If

	If bOption2FieldExists Then
		oEditorDialog.getControl(&quot;bOption2&quot;).setState(BoolToCheckBoxState(bOption2))
	End If
	
	If bOption3FieldExists Then
		oEditorDialog.getControl(&quot;bOption3&quot;).setState(BoolToCheckBoxState(bOption3))
	End If
	
	If bOption4FieldExists Then
		oEditorDialog.getControl(&quot;bOption4&quot;).setState(BoolToCheckBoxState(bOption4))
	End If
	
	
	
End Sub

&apos; ***************************
&apos;    Field modified events
&apos; ***************************

Sub TemplateChanged()

	Dim sOldTemplate As String
	Dim bCurrentlyContainsTemplate As Boolean
	Dim sCurrentTemplateLocationLabel As String

	sOldTemplate = sTemplate
	sTemplate=oEditorDialog.getControl(&quot;sTemplate&quot;).getText()
	
	If sTemplate &lt;&gt; sOldTemplate Then  &apos; only when really a different template has been selected
	
		If bContainsTemplate And Not bTemplateSaved Then
			Select Case MsgBox (oMessages.getPropertyValue (&quot;sMsgWannaSaveTemplate&quot;), iMsgBox_I + iMsgBox_YNC + iMsgBox_1, oMessages.getPropertyValue (&quot;sCaptionInfo&quot;))
				Case iAnswer_Yes
					sTemplate = sOldTemplate
					oEditorDialog.getControl (&quot;sTemplate&quot;).setText (sTemplate)
					EditTemplateButton()
					Exit Sub
				Case iAnswer_No
					&apos; nothing, just continue
				Case Else  &apos; &quot;Cancel&quot; button or &quot;Escape&quot; key
					sTemplate = sOldTemplate
					oEditorDialog.getControl (&quot;sTemplate&quot;).setText (sTemplate)
					Exit Sub
			End Select
		End If
		
		bCurrentlyContainsTemplate = bContainsTemplate
		sCurrentTemplateLocationLabel = sTemplateLocationLabel
		bContainsTemplate = False
		If Not ReadTemplate (False) Then
			&apos; bContainsTemplate = bCurrentlyContainsTemplate
			&apos; sTemplateLocationLabel = sCurrentTemplateLocationLabel
		Else
			&apos; anything?
		End If
	
		If bUseDefaultCode Then
			sCode=&quot;&quot; &apos; UseDefaultCode() does not ask if sCode is empty
			UseDefaultCode()
		End If

		If bUseDefaultLineWidth Then UseDefaultLineWidth()
		If bUseDefaultStaffSize Then UseDefaultStaffSize()
		If bUseDefaultCustom1 Then UseDefaultCustom1()
		If bUseDefaultCustom2 Then UseDefaultCustom2()
		If bUseDefaultCustom3 Then UseDefaultCustom3()
		If bUseDefaultCustom4 Then UseDefaultCustom4()
		
		UseDefaultOptions()   &apos; better don&apos;t do that?

		GreyOut()
	End If

End Sub


Sub CodeModified
	sCode = oEditorDialog.getControl(&quot;sCode&quot;).getText()
	bUseDefaultCode = False
	oEditorDialog.getControl(&quot;bUseDefaultCode&quot;).setState(BoolToCheckBoxState(False))
End Sub

Sub LineWidthModified
	sLineWidth = oEditorDialog.getControl(&quot;sLineWidth&quot;).getText()
	bUseDefaultLineWidth = False
	oEditorDialog.getControl(&quot;bUseDefaultLineWidth&quot;).setState(BoolToCheckBoxState(False))
	UpdateFieldAppearance (&quot;LineWidth&quot;, sLineWidthLabel, sDefaultLineWidth, &quot;##t&quot;, &quot;##f&quot;, bLineWidthFieldExists)
End Sub

Sub StaffSizeModified
	sStaffSize = oEditorDialog.getControl(&quot;sStaffSize&quot;).getText()
	bUseDefaultStaffSize = False
	oEditorDialog.getControl(&quot;bUseDefaultStaffSize&quot;).setState(BoolToCheckBoxState(False))
	UpdateFieldAppearance (&quot;StaffSize&quot;, sStaffSizeLabel, sDefaultStaffSize, &quot;#t&quot;, &quot;#f&quot;, bStaffSizeFieldExists)
End Sub

Sub Custom1Modified
	sCustom1 = oEditorDialog.getControl(&quot;sCustom1&quot;).getText()
	bUseDefaultCustom1 = False
	oEditorDialog.getControl(&quot;bUseDefaultCustom1&quot;).setState(BoolToCheckBoxState(False))
	UpdateFieldAppearance (&quot;Custom1&quot;, sCustom1Label, sDefaultCustom1, &quot;##t&quot;, &quot;##f&quot;, bCustom1FieldExists)
End Sub

Sub Custom2Modified
	sCustom2 = oEditorDialog.getControl(&quot;sCustom2&quot;).getText()
	bUseDefaultCustom2 = False
	oEditorDialog.getControl(&quot;bUseDefaultCustom2&quot;).setState(BoolToCheckBoxState(False))
	UpdateFieldAppearance (&quot;Custom2&quot;, sCustom2Label, sDefaultCustom2, &quot;##t&quot;, &quot;##f&quot;, bCustom2FieldExists)
End Sub

Sub Custom3Modified
	sCustom3 = oEditorDialog.getControl(&quot;sCustom3&quot;).getText()
	bUseDefaultCustom3 = False
	oEditorDialog.getControl(&quot;bUseDefaultCustom3&quot;).setState(BoolToCheckBoxState(False))
	UpdateFieldAppearance (&quot;Custom3&quot;, sCustom3Label, sDefaultCustom3, &quot;##t&quot;, &quot;##f&quot;, bCustom3FieldExists)
End Sub

Sub Custom4Modified
	sCustom4 = oEditorDialog.getControl(&quot;sCustom4&quot;).getText()
	bUseDefaultCustom4 = False
	oEditorDialog.getControl(&quot;bUseDefaultCustom4&quot;).setState(BoolToCheckBoxState(False))
	UpdateFieldAppearance (&quot;Custom4&quot;, sCustom4Label, sDefaultCustom4, &quot;##t&quot;, &quot;##f&quot;, bCustom4FieldExists)
End Sub

Sub LineWidthCheckBoxModified
	sLineWidth = LyBoolToString (CheckBoxStateToBool (oEditorDialog.getControl(&quot;bLineWidth&quot;).getState()))
	oEditorDialog.getControl(&quot;sLineWidth&quot;).setText(sLineWidth)
	bUseDefaultLineWidth = False
	oEditorDialog.getControl(&quot;bUseDefaultLineWidth&quot;).setState(BoolToCheckBoxState(False))
	UpdateFieldAppearance (&quot;LineWidth&quot;, sLineWidthLabel, sDefaultLineWidth, &quot;##t&quot;, &quot;##f&quot;, bLineWidthFieldExists)
End Sub

Sub StaffSizeCheckBoxModified
	sStaffSize = ScmBoolToString (CheckBoxStateToBool (oEditorDialog.getControl(&quot;bStaffSize&quot;).getState()))
	oEditorDialog.getControl(&quot;sStaffSize&quot;).setText(sStaffSize)
	bUseDefaultStaffSize = False
	oEditorDialog.getControl(&quot;bUseDefaultStaffSize&quot;).setState(BoolToCheckBoxState(False))
	UpdateFieldAppearance (&quot;StaffSize&quot;, sStaffSizeLabel, sDefaultStaffSize, &quot;#t&quot;, &quot;#f&quot;, bStaffSizeFieldExists)
End Sub

Sub Custom1CheckBoxModified
	sCustom1 = LyBoolToString (CheckBoxStateToBool (oEditorDialog.getControl(&quot;bCustom1&quot;).getState()))
	oEditorDialog.getControl(&quot;sCustom1&quot;).setText(sCustom1)
	bUseDefaultCustom1 = False
	oEditorDialog.getControl(&quot;bUseDefaultCustom1&quot;).setState(BoolToCheckBoxState(False))
	UpdateFieldAppearance (&quot;Custom1&quot;, sCustom1Label, sDefaultCustom1, &quot;##t&quot;, &quot;##f&quot;, bCustom1FieldExists)
End Sub

Sub Custom2CheckBoxModified
	sCustom2 = LyBoolToString (CheckBoxStateToBool (oEditorDialog.getControl(&quot;bCustom2&quot;).getState()))
	oEditorDialog.getControl(&quot;sCustom2&quot;).setText(sCustom2)
	bUseDefaultCustom2 = False
	oEditorDialog.getControl(&quot;bUseDefaultCustom2&quot;).setState(BoolToCheckBoxState(False))
	UpdateFieldAppearance (&quot;Custom2&quot;, sCustom2Label, sDefaultCustom2, &quot;##t&quot;, &quot;##f&quot;, bCustom2FieldExists)
End Sub

Sub Custom3CheckBoxModified
	sCustom3 = LyBoolToString (CheckBoxStateToBool (oEditorDialog.getControl(&quot;bCustom3&quot;).getState()))
	oEditorDialog.getControl(&quot;sCustom3&quot;).setText(sCustom3)
	bUseDefaultCustom3 = False
	oEditorDialog.getControl(&quot;bUseDefaultCustom3&quot;).setState(BoolToCheckBoxState(False))
	UpdateFieldAppearance (&quot;Custom3&quot;, sCustom3Label, sDefaultCustom3, &quot;##t&quot;, &quot;##f&quot;, bCustom3FieldExists)
End Sub

Sub Custom4CheckBoxModified
	sCustom4 = LyBoolToString (CheckBoxStateToBool (oEditorDialog.getControl(&quot;bCustom4&quot;).getState()))
	oEditorDialog.getControl(&quot;sCustom4&quot;).setText(sCustom4)
	bUseDefaultCustom4 = False
	oEditorDialog.getControl(&quot;bUseDefaultCustom4&quot;).setState(BoolToCheckBoxState(False))
	UpdateFieldAppearance (&quot;Custom4&quot;, sCustom4Label, sDefaultCustom4, &quot;##t&quot;, &quot;##f&quot;, bCustom4FieldExists)
End Sub

Sub Option1Modified
	bOption1 = CheckBoxStateToBool (oEditorDialog.getControl(&quot;bOption1&quot;).getState())
End Sub

Sub Option2Modified
	bOption2 = CheckBoxStateToBool (oEditorDialog.getControl(&quot;bOption2&quot;).getState())
End Sub

Sub Option3Modified
	bOption3 = CheckBoxStateToBool (oEditorDialog.getControl(&quot;bOption3&quot;).getState())
End Sub

Sub Option4Modified
	bOption4 = CheckBoxStateToBool (oEditorDialog.getControl(&quot;bOption4&quot;).getState())
End Sub



&apos; ****************************************
&apos;    Default Check Boxes Status Changed
&apos; ****************************************

Sub UseDefaultCode()
	Dim bYesDoItPlease As Boolean &apos; OOo Basic unfortunately does not support short circuit operators
	
	If CheckBoxStateToBool(oEditorDialog.getControl(&quot;bUseDefaultCode&quot;).getState()) Then

		bYesDoItPlease=False
		If sCode=&quot;&quot; Or sCode=sDefaultCode Then &apos; Dont&apos;s ask whether to overwrite the code if there is no code or the code is not changed
			bYesDoItPlease=True
		Else
			&apos; bYesDoItPlease= (MsgBox(&quot;Do you really want to reset your code to the default?&quot;, iMsgBox_YN, &quot;Are you sure?&quot;) = iAnswer_Yes )
			bYesDoItPlease = (MsgBox (oMessages.getPropertyValue (&quot;sMsgResetCode&quot;), iMsgBox_YN+iMsgBox_Q, oMessages.getPropertyValue (&quot;sCaptionRUSure&quot;)) = iAnswer_Yes )
		End If

		If bYesDoItPlease Then
			oEditorDialog.getControl(&quot;sCode&quot;).setText(sDefaultCode)
			oEditorDialog.getControl(&quot;bUseDefaultCode&quot;).setState(BoolToCheckBoxState(True))
			bUseDefaultCode = True
			sCode = sDefaultCode
		Else
			oEditorDialog.getControl(&quot;bUseDefaultCode&quot;).setState(BoolToCheckBoxState(False))
		End If

	Else
		bUseDefaultCode = False
	End If

End Sub


Sub UseDefaultLineWidth()
	If CheckBoxStateToBool(oEditorDialog.getControl(&quot;bUseDefaultLineWidth&quot;).getState()) Then
		oEditorDialog.getControl(&quot;sLineWidth&quot;).setText(sDefaultLineWidth)
		oEditorDialog.getControl(&quot;bUseDefaultLineWidth&quot;).setState(BoolToCheckBoxState(True))
		bUseDefaultLineWidth = True
		sLineWidth = sDefaultLineWidth
	Else
		bUseDefaultLineWidth = False
	End If
	UpdateFieldAppearance (&quot;LineWidth&quot;, sLineWidthLabel, sDefaultLineWidth, &quot;##t&quot;, &quot;##f&quot;, bLineWidthFieldExists)
End Sub

Sub UseDefaultStaffSize
	If CheckBoxStateToBool(oEditorDialog.getControl(&quot;bUseDefaultStaffSize&quot;).getState()) Then
		oEditorDialog.getControl(&quot;sStaffSize&quot;).setText(sDefaultStaffSize)
		oEditorDialog.getControl(&quot;bUseDefaultStaffSize&quot;).setState(BoolToCheckBoxState(True))
		bUseDefaultStaffSize = True
		sStaffSize = sDefaultStaffSize
	Else
		bUseDefaultStaffSize = False
	End If
	UpdateFieldAppearance (&quot;StaffSize&quot;, sStaffSizeLabel, sDefaultStaffSize, &quot;#t&quot;, &quot;#f&quot;, bStaffSizeFieldExists)
End Sub

Sub UseDefaultCustom1
	If CheckBoxStateToBool(oEditorDialog.getControl(&quot;bUseDefaultCustom1&quot;).getState()) Then
		oEditorDialog.getControl(&quot;sCustom1&quot;).setText(sDefaultCustom1)
		oEditorDialog.getControl(&quot;bUseDefaultCustom1&quot;).setState(BoolToCheckBoxState(True))
		bUseDefaultCustom1 = True
		sCustom1 = sDefaultCustom1
	Else
		bUseDefaultCustom1 = False
	End If
	UpdateFieldAppearance (&quot;Custom1&quot;, sCustom1Label, sDefaultCustom1, &quot;##t&quot;, &quot;##f&quot;, bCustom1FieldExists)
End Sub

Sub UseDefaultCustom2
	If CheckBoxStateToBool(oEditorDialog.getControl(&quot;bUseDefaultCustom2&quot;).getState()) Then
		oEditorDialog.getControl(&quot;sCustom2&quot;).setText(sDefaultCustom2)
		oEditorDialog.getControl(&quot;bUseDefaultCustom2&quot;).setState(BoolToCheckBoxState(True))
		bUseDefaultCustom2 = True
		sCustom2 = sDefaultCustom2
	Else
		bUseDefaultCustom2 = False
	End If
	UpdateFieldAppearance (&quot;Custom2&quot;, sCustom2Label, sDefaultCustom2, &quot;##t&quot;, &quot;##f&quot;, bCustom2FieldExists)
End Sub

Sub UseDefaultCustom3
	If CheckBoxStateToBool(oEditorDialog.getControl(&quot;bUseDefaultCustom3&quot;).getState()) Then
		oEditorDialog.getControl(&quot;sCustom3&quot;).setText(sDefaultCustom3)
		oEditorDialog.getControl(&quot;bUseDefaultCustom3&quot;).setState(BoolToCheckBoxState(True))
		bUseDefaultCustom3 = True
		sCustom3 = sDefaultCustom3
	Else
		bUseDefaultCustom3 = False
	End If
	UpdateFieldAppearance (&quot;Custom3&quot;, sCustom3Label, sDefaultCustom3, &quot;##t&quot;, &quot;##f&quot;, bCustom3FieldExists)
End Sub

Sub UseDefaultCustom4
	If CheckBoxStateToBool(oEditorDialog.getControl(&quot;bUseDefaultCustom4&quot;).getState()) Then
		oEditorDialog.getControl(&quot;sCustom4&quot;).setText(sDefaultCustom4)
		oEditorDialog.getControl(&quot;bUseDefaultCustom4&quot;).setState(BoolToCheckBoxState(True))
		bUseDefaultCustom4 = True
		sCustom4 = sDefaultCustom4
	Else
		bUseDefaultCustom4 = False
	End If
	UpdateFieldAppearance (&quot;Custom4&quot;, sCustom4Label, sDefaultCustom4, &quot;##t&quot;, &quot;##f&quot;, bCustom4FieldExists)
End Sub

Sub UseDefaultOptions
	bOption1 = bDefaultOption1
	bOption2 = bDefaultOption2
	bOption3 = bDefaultOption3
	bOption4 = bDefaultOption4
	oEditorDialog.getControl(&quot;bOption1&quot;).setState(BoolToCheckBoxState(bOption1))
	oEditorDialog.getControl(&quot;bOption2&quot;).setState(BoolToCheckBoxState(bOption2))
	oEditorDialog.getControl(&quot;bOption3&quot;).setState(BoolToCheckBoxState(bOption3))
	oEditorDialog.getControl(&quot;bOption4&quot;).setState(BoolToCheckBoxState(bOption4))
End Sub

</script:module>